/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the AddressSuggestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddressSuggestRequest{}

// AddressSuggestRequest struct for AddressSuggestRequest
type AddressSuggestRequest struct {
	Address AddressSuggestRequestAddress `json:"address"`
}

type _AddressSuggestRequest AddressSuggestRequest

// NewAddressSuggestRequest instantiates a new AddressSuggestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddressSuggestRequest(address AddressSuggestRequestAddress) *AddressSuggestRequest {
	this := AddressSuggestRequest{}
	this.Address = address
	return &this
}

// NewAddressSuggestRequestWithDefaults instantiates a new AddressSuggestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddressSuggestRequestWithDefaults() *AddressSuggestRequest {
	this := AddressSuggestRequest{}
	return &this
}

// GetAddress returns the Address field value
func (o *AddressSuggestRequest) GetAddress() AddressSuggestRequestAddress {
	if o == nil {
		var ret AddressSuggestRequestAddress
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *AddressSuggestRequest) GetAddressOk() (*AddressSuggestRequestAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *AddressSuggestRequest) SetAddress(v AddressSuggestRequestAddress) {
	o.Address = v
}

func (o AddressSuggestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddressSuggestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	return toSerialize, nil
}

func (o *AddressSuggestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAddressSuggestRequest := _AddressSuggestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAddressSuggestRequest)

	if err != nil {
		return err
	}

	*o = AddressSuggestRequest(varAddressSuggestRequest)

	return err
}

type NullableAddressSuggestRequest struct {
	value *AddressSuggestRequest
	isSet bool
}

func (v NullableAddressSuggestRequest) Get() *AddressSuggestRequest {
	return v.value
}

func (v *NullableAddressSuggestRequest) Set(val *AddressSuggestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressSuggestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressSuggestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressSuggestRequest(val *AddressSuggestRequest) *NullableAddressSuggestRequest {
	return &NullableAddressSuggestRequest{value: val, isSet: true}
}

func (v NullableAddressSuggestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressSuggestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


