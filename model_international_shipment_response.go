/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the InternationalShipmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InternationalShipmentResponse{}

// InternationalShipmentResponse struct for InternationalShipmentResponse
type InternationalShipmentResponse struct {
	// This is a GUID (globally unique identifier) that's automatically generated for every request that the webserver receives.
	CorrelationId *string `json:"correlationId,omitempty"`
	// This indicates the label layout and generated label details
	LabelLayout []DomesticShipmentResponseLabelLayoutInner `json:"labelLayout,omitempty"`
	FromAddress *ReprintShipmentFromAddress `json:"fromAddress,omitempty"`
	Parcel *ShipmentDomesticParcel `json:"parcel,omitempty"`
	// >-Parcel Id is optional and would be visible in case when is present in the request.
	ParcelId *string `json:"parcelId,omitempty"`
	// The Tracking number given to the Parcel for tracking purpose.
	ParcelTrackingNumber *string `json:"parcelTrackingNumber,omitempty"`
	Rate *InternationalShipmentResponseRate `json:"rate,omitempty"`
	// A unique identifier associated with the Shipment.
	ShipmentId *string `json:"shipmentId,omitempty"`
	ShipmentOptions *ShipmentOptions `json:"shipmentOptions,omitempty"`
	ToAddress *ReprintShipmentToAddress `json:"toAddress,omitempty"`
	Customs *InternationalShipmentResponseCustoms `json:"customs,omitempty"`
}

// NewInternationalShipmentResponse instantiates a new InternationalShipmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInternationalShipmentResponse() *InternationalShipmentResponse {
	this := InternationalShipmentResponse{}
	return &this
}

// NewInternationalShipmentResponseWithDefaults instantiates a new InternationalShipmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInternationalShipmentResponseWithDefaults() *InternationalShipmentResponse {
	this := InternationalShipmentResponse{}
	return &this
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *InternationalShipmentResponse) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetLabelLayout returns the LabelLayout field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetLabelLayout() []DomesticShipmentResponseLabelLayoutInner {
	if o == nil || IsNil(o.LabelLayout) {
		var ret []DomesticShipmentResponseLabelLayoutInner
		return ret
	}
	return o.LabelLayout
}

// GetLabelLayoutOk returns a tuple with the LabelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetLabelLayoutOk() ([]DomesticShipmentResponseLabelLayoutInner, bool) {
	if o == nil || IsNil(o.LabelLayout) {
		return nil, false
	}
	return o.LabelLayout, true
}

// HasLabelLayout returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasLabelLayout() bool {
	if o != nil && !IsNil(o.LabelLayout) {
		return true
	}

	return false
}

// SetLabelLayout gets a reference to the given []DomesticShipmentResponseLabelLayoutInner and assigns it to the LabelLayout field.
func (o *InternationalShipmentResponse) SetLabelLayout(v []DomesticShipmentResponseLabelLayoutInner) {
	o.LabelLayout = v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetFromAddress() ReprintShipmentFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret ReprintShipmentFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetFromAddressOk() (*ReprintShipmentFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given ReprintShipmentFromAddress and assigns it to the FromAddress field.
func (o *InternationalShipmentResponse) SetFromAddress(v ReprintShipmentFromAddress) {
	o.FromAddress = &v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetParcel() ShipmentDomesticParcel {
	if o == nil || IsNil(o.Parcel) {
		var ret ShipmentDomesticParcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetParcelOk() (*ShipmentDomesticParcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given ShipmentDomesticParcel and assigns it to the Parcel field.
func (o *InternationalShipmentResponse) SetParcel(v ShipmentDomesticParcel) {
	o.Parcel = &v
}

// GetParcelId returns the ParcelId field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetParcelId() string {
	if o == nil || IsNil(o.ParcelId) {
		var ret string
		return ret
	}
	return *o.ParcelId
}

// GetParcelIdOk returns a tuple with the ParcelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetParcelIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelId) {
		return nil, false
	}
	return o.ParcelId, true
}

// HasParcelId returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasParcelId() bool {
	if o != nil && !IsNil(o.ParcelId) {
		return true
	}

	return false
}

// SetParcelId gets a reference to the given string and assigns it to the ParcelId field.
func (o *InternationalShipmentResponse) SetParcelId(v string) {
	o.ParcelId = &v
}

// GetParcelTrackingNumber returns the ParcelTrackingNumber field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetParcelTrackingNumber() string {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		var ret string
		return ret
	}
	return *o.ParcelTrackingNumber
}

// GetParcelTrackingNumberOk returns a tuple with the ParcelTrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetParcelTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		return nil, false
	}
	return o.ParcelTrackingNumber, true
}

// HasParcelTrackingNumber returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasParcelTrackingNumber() bool {
	if o != nil && !IsNil(o.ParcelTrackingNumber) {
		return true
	}

	return false
}

// SetParcelTrackingNumber gets a reference to the given string and assigns it to the ParcelTrackingNumber field.
func (o *InternationalShipmentResponse) SetParcelTrackingNumber(v string) {
	o.ParcelTrackingNumber = &v
}

// GetRate returns the Rate field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetRate() InternationalShipmentResponseRate {
	if o == nil || IsNil(o.Rate) {
		var ret InternationalShipmentResponseRate
		return ret
	}
	return *o.Rate
}

// GetRateOk returns a tuple with the Rate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetRateOk() (*InternationalShipmentResponseRate, bool) {
	if o == nil || IsNil(o.Rate) {
		return nil, false
	}
	return o.Rate, true
}

// HasRate returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasRate() bool {
	if o != nil && !IsNil(o.Rate) {
		return true
	}

	return false
}

// SetRate gets a reference to the given InternationalShipmentResponseRate and assigns it to the Rate field.
func (o *InternationalShipmentResponse) SetRate(v InternationalShipmentResponseRate) {
	o.Rate = &v
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *InternationalShipmentResponse) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetShipmentOptions() ShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret ShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetShipmentOptionsOk() (*ShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given ShipmentOptions and assigns it to the ShipmentOptions field.
func (o *InternationalShipmentResponse) SetShipmentOptions(v ShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetToAddress() ReprintShipmentToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret ReprintShipmentToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetToAddressOk() (*ReprintShipmentToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given ReprintShipmentToAddress and assigns it to the ToAddress field.
func (o *InternationalShipmentResponse) SetToAddress(v ReprintShipmentToAddress) {
	o.ToAddress = &v
}

// GetCustoms returns the Customs field value if set, zero value otherwise.
func (o *InternationalShipmentResponse) GetCustoms() InternationalShipmentResponseCustoms {
	if o == nil || IsNil(o.Customs) {
		var ret InternationalShipmentResponseCustoms
		return ret
	}
	return *o.Customs
}

// GetCustomsOk returns a tuple with the Customs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InternationalShipmentResponse) GetCustomsOk() (*InternationalShipmentResponseCustoms, bool) {
	if o == nil || IsNil(o.Customs) {
		return nil, false
	}
	return o.Customs, true
}

// HasCustoms returns a boolean if a field has been set.
func (o *InternationalShipmentResponse) HasCustoms() bool {
	if o != nil && !IsNil(o.Customs) {
		return true
	}

	return false
}

// SetCustoms gets a reference to the given InternationalShipmentResponseCustoms and assigns it to the Customs field.
func (o *InternationalShipmentResponse) SetCustoms(v InternationalShipmentResponseCustoms) {
	o.Customs = &v
}

func (o InternationalShipmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InternationalShipmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.LabelLayout) {
		toSerialize["labelLayout"] = o.LabelLayout
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	if !IsNil(o.ParcelId) {
		toSerialize["parcelId"] = o.ParcelId
	}
	if !IsNil(o.ParcelTrackingNumber) {
		toSerialize["parcelTrackingNumber"] = o.ParcelTrackingNumber
	}
	if !IsNil(o.Rate) {
		toSerialize["rate"] = o.Rate
	}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	if !IsNil(o.Customs) {
		toSerialize["customs"] = o.Customs
	}
	return toSerialize, nil
}

type NullableInternationalShipmentResponse struct {
	value *InternationalShipmentResponse
	isSet bool
}

func (v NullableInternationalShipmentResponse) Get() *InternationalShipmentResponse {
	return v.value
}

func (v *NullableInternationalShipmentResponse) Set(val *InternationalShipmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInternationalShipmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInternationalShipmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInternationalShipmentResponse(val *InternationalShipmentResponse) *NullableInternationalShipmentResponse {
	return &NullableInternationalShipmentResponse{value: val, isSet: true}
}

func (v NullableInternationalShipmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInternationalShipmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


