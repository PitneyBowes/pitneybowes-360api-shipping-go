/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the MultipieceDomesticShipmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceDomesticShipmentRequest{}

// MultipieceDomesticShipmentRequest struct for MultipieceDomesticShipmentRequest
type MultipieceDomesticShipmentRequest struct {
	// description
	Size *string `json:"size,omitempty"`
	// description
	Type *string `json:"type,omitempty"`
	FromAddress *MultipieceDomesticShipmentRequestFromAddress `json:"fromAddress,omitempty"`
	// description
	CarrierAccountId *string `json:"carrierAccountId,omitempty"`
	// description
	ServiceId *string `json:"serviceId,omitempty"`
	ShipmentOptions *MultipieceDomesticShipmentRequestShipmentOptions `json:"shipmentOptions,omitempty"`
	// description
	Metadata []MultipieceDomesticShipmentRequestMetadataInner `json:"metadata,omitempty"`
	// description
	MultiPieceParcels []MultipieceDomesticShipmentRequestMultiPieceParcelsInner `json:"multiPieceParcels,omitempty"`
	ToAddress *MultipieceDomesticShipmentRequestToAddress `json:"toAddress,omitempty"`
}

// NewMultipieceDomesticShipmentRequest instantiates a new MultipieceDomesticShipmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceDomesticShipmentRequest() *MultipieceDomesticShipmentRequest {
	this := MultipieceDomesticShipmentRequest{}
	return &this
}

// NewMultipieceDomesticShipmentRequestWithDefaults instantiates a new MultipieceDomesticShipmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceDomesticShipmentRequestWithDefaults() *MultipieceDomesticShipmentRequest {
	this := MultipieceDomesticShipmentRequest{}
	return &this
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetSize() string {
	if o == nil || IsNil(o.Size) {
		var ret string
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetSizeOk() (*string, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given string and assigns it to the Size field.
func (o *MultipieceDomesticShipmentRequest) SetSize(v string) {
	o.Size = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MultipieceDomesticShipmentRequest) SetType(v string) {
	o.Type = &v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetFromAddress() MultipieceDomesticShipmentRequestFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret MultipieceDomesticShipmentRequestFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetFromAddressOk() (*MultipieceDomesticShipmentRequestFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given MultipieceDomesticShipmentRequestFromAddress and assigns it to the FromAddress field.
func (o *MultipieceDomesticShipmentRequest) SetFromAddress(v MultipieceDomesticShipmentRequestFromAddress) {
	o.FromAddress = &v
}

// GetCarrierAccountId returns the CarrierAccountId field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetCarrierAccountId() string {
	if o == nil || IsNil(o.CarrierAccountId) {
		var ret string
		return ret
	}
	return *o.CarrierAccountId
}

// GetCarrierAccountIdOk returns a tuple with the CarrierAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetCarrierAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierAccountId) {
		return nil, false
	}
	return o.CarrierAccountId, true
}

// HasCarrierAccountId returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasCarrierAccountId() bool {
	if o != nil && !IsNil(o.CarrierAccountId) {
		return true
	}

	return false
}

// SetCarrierAccountId gets a reference to the given string and assigns it to the CarrierAccountId field.
func (o *MultipieceDomesticShipmentRequest) SetCarrierAccountId(v string) {
	o.CarrierAccountId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *MultipieceDomesticShipmentRequest) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetShipmentOptions() MultipieceDomesticShipmentRequestShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret MultipieceDomesticShipmentRequestShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetShipmentOptionsOk() (*MultipieceDomesticShipmentRequestShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given MultipieceDomesticShipmentRequestShipmentOptions and assigns it to the ShipmentOptions field.
func (o *MultipieceDomesticShipmentRequest) SetShipmentOptions(v MultipieceDomesticShipmentRequestShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetMetadata() []MultipieceDomesticShipmentRequestMetadataInner {
	if o == nil || IsNil(o.Metadata) {
		var ret []MultipieceDomesticShipmentRequestMetadataInner
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetMetadataOk() ([]MultipieceDomesticShipmentRequestMetadataInner, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []MultipieceDomesticShipmentRequestMetadataInner and assigns it to the Metadata field.
func (o *MultipieceDomesticShipmentRequest) SetMetadata(v []MultipieceDomesticShipmentRequestMetadataInner) {
	o.Metadata = v
}

// GetMultiPieceParcels returns the MultiPieceParcels field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetMultiPieceParcels() []MultipieceDomesticShipmentRequestMultiPieceParcelsInner {
	if o == nil || IsNil(o.MultiPieceParcels) {
		var ret []MultipieceDomesticShipmentRequestMultiPieceParcelsInner
		return ret
	}
	return o.MultiPieceParcels
}

// GetMultiPieceParcelsOk returns a tuple with the MultiPieceParcels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetMultiPieceParcelsOk() ([]MultipieceDomesticShipmentRequestMultiPieceParcelsInner, bool) {
	if o == nil || IsNil(o.MultiPieceParcels) {
		return nil, false
	}
	return o.MultiPieceParcels, true
}

// HasMultiPieceParcels returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasMultiPieceParcels() bool {
	if o != nil && !IsNil(o.MultiPieceParcels) {
		return true
	}

	return false
}

// SetMultiPieceParcels gets a reference to the given []MultipieceDomesticShipmentRequestMultiPieceParcelsInner and assigns it to the MultiPieceParcels field.
func (o *MultipieceDomesticShipmentRequest) SetMultiPieceParcels(v []MultipieceDomesticShipmentRequestMultiPieceParcelsInner) {
	o.MultiPieceParcels = v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *MultipieceDomesticShipmentRequest) GetToAddress() MultipieceDomesticShipmentRequestToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret MultipieceDomesticShipmentRequestToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceDomesticShipmentRequest) GetToAddressOk() (*MultipieceDomesticShipmentRequestToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *MultipieceDomesticShipmentRequest) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given MultipieceDomesticShipmentRequestToAddress and assigns it to the ToAddress field.
func (o *MultipieceDomesticShipmentRequest) SetToAddress(v MultipieceDomesticShipmentRequestToAddress) {
	o.ToAddress = &v
}

func (o MultipieceDomesticShipmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceDomesticShipmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.CarrierAccountId) {
		toSerialize["carrierAccountId"] = o.CarrierAccountId
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.MultiPieceParcels) {
		toSerialize["multiPieceParcels"] = o.MultiPieceParcels
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	return toSerialize, nil
}

type NullableMultipieceDomesticShipmentRequest struct {
	value *MultipieceDomesticShipmentRequest
	isSet bool
}

func (v NullableMultipieceDomesticShipmentRequest) Get() *MultipieceDomesticShipmentRequest {
	return v.value
}

func (v *NullableMultipieceDomesticShipmentRequest) Set(val *MultipieceDomesticShipmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceDomesticShipmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceDomesticShipmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceDomesticShipmentRequest(val *MultipieceDomesticShipmentRequest) *NullableMultipieceDomesticShipmentRequest {
	return &NullableMultipieceDomesticShipmentRequest{value: val, isSet: true}
}

func (v NullableMultipieceDomesticShipmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceDomesticShipmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


