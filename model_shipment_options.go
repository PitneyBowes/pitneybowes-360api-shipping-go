/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the ShipmentOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentOptions{}

// ShipmentOptions struct for ShipmentOptions
type ShipmentOptions struct {
	// This option asks if the shipment is to be added for Manifest, so that the shipment will reflect in the Manifest Form while compilation. The value can be 'true' or 'false'. Applicable for USPS
	AddToManifest *bool `json:"addToManifest,omitempty"`
	// This prints a custom message on shipping label
	PrintCustomMessage *string `json:"printCustomMessage,omitempty"`
	// It provides options to print receipt with shipping label. Only applicable for USPS, can take values- RECEIPT_ONLY or RECEIPT_WITH_INSTRUCTIONS or NO_OPTIONS
	ReceiptOption *string `json:"receiptOption,omitempty"`
	// This prints department on shipping label, applicable for FedEx
	PrintDepartment *string `json:"printDepartment,omitempty"`
	// This prints invoice number on shipping label, applicable for FedEx
	PrintInvoiceNumber *string `json:"printInvoiceNumber,omitempty"`
	// This prints po number on shipping label, applicable for FedEx
	PrintPONumber *string `json:"printPONumber,omitempty"`
	// This is required for DHL Express shipment. It is used to provide description of package
	PackageDescription *string `json:"packageDescription,omitempty"`
}

// NewShipmentOptions instantiates a new ShipmentOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentOptions() *ShipmentOptions {
	this := ShipmentOptions{}
	return &this
}

// NewShipmentOptionsWithDefaults instantiates a new ShipmentOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentOptionsWithDefaults() *ShipmentOptions {
	this := ShipmentOptions{}
	return &this
}

// GetAddToManifest returns the AddToManifest field value if set, zero value otherwise.
func (o *ShipmentOptions) GetAddToManifest() bool {
	if o == nil || IsNil(o.AddToManifest) {
		var ret bool
		return ret
	}
	return *o.AddToManifest
}

// GetAddToManifestOk returns a tuple with the AddToManifest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetAddToManifestOk() (*bool, bool) {
	if o == nil || IsNil(o.AddToManifest) {
		return nil, false
	}
	return o.AddToManifest, true
}

// HasAddToManifest returns a boolean if a field has been set.
func (o *ShipmentOptions) HasAddToManifest() bool {
	if o != nil && !IsNil(o.AddToManifest) {
		return true
	}

	return false
}

// SetAddToManifest gets a reference to the given bool and assigns it to the AddToManifest field.
func (o *ShipmentOptions) SetAddToManifest(v bool) {
	o.AddToManifest = &v
}

// GetPrintCustomMessage returns the PrintCustomMessage field value if set, zero value otherwise.
func (o *ShipmentOptions) GetPrintCustomMessage() string {
	if o == nil || IsNil(o.PrintCustomMessage) {
		var ret string
		return ret
	}
	return *o.PrintCustomMessage
}

// GetPrintCustomMessageOk returns a tuple with the PrintCustomMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetPrintCustomMessageOk() (*string, bool) {
	if o == nil || IsNil(o.PrintCustomMessage) {
		return nil, false
	}
	return o.PrintCustomMessage, true
}

// HasPrintCustomMessage returns a boolean if a field has been set.
func (o *ShipmentOptions) HasPrintCustomMessage() bool {
	if o != nil && !IsNil(o.PrintCustomMessage) {
		return true
	}

	return false
}

// SetPrintCustomMessage gets a reference to the given string and assigns it to the PrintCustomMessage field.
func (o *ShipmentOptions) SetPrintCustomMessage(v string) {
	o.PrintCustomMessage = &v
}

// GetReceiptOption returns the ReceiptOption field value if set, zero value otherwise.
func (o *ShipmentOptions) GetReceiptOption() string {
	if o == nil || IsNil(o.ReceiptOption) {
		var ret string
		return ret
	}
	return *o.ReceiptOption
}

// GetReceiptOptionOk returns a tuple with the ReceiptOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetReceiptOptionOk() (*string, bool) {
	if o == nil || IsNil(o.ReceiptOption) {
		return nil, false
	}
	return o.ReceiptOption, true
}

// HasReceiptOption returns a boolean if a field has been set.
func (o *ShipmentOptions) HasReceiptOption() bool {
	if o != nil && !IsNil(o.ReceiptOption) {
		return true
	}

	return false
}

// SetReceiptOption gets a reference to the given string and assigns it to the ReceiptOption field.
func (o *ShipmentOptions) SetReceiptOption(v string) {
	o.ReceiptOption = &v
}

// GetPrintDepartment returns the PrintDepartment field value if set, zero value otherwise.
func (o *ShipmentOptions) GetPrintDepartment() string {
	if o == nil || IsNil(o.PrintDepartment) {
		var ret string
		return ret
	}
	return *o.PrintDepartment
}

// GetPrintDepartmentOk returns a tuple with the PrintDepartment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetPrintDepartmentOk() (*string, bool) {
	if o == nil || IsNil(o.PrintDepartment) {
		return nil, false
	}
	return o.PrintDepartment, true
}

// HasPrintDepartment returns a boolean if a field has been set.
func (o *ShipmentOptions) HasPrintDepartment() bool {
	if o != nil && !IsNil(o.PrintDepartment) {
		return true
	}

	return false
}

// SetPrintDepartment gets a reference to the given string and assigns it to the PrintDepartment field.
func (o *ShipmentOptions) SetPrintDepartment(v string) {
	o.PrintDepartment = &v
}

// GetPrintInvoiceNumber returns the PrintInvoiceNumber field value if set, zero value otherwise.
func (o *ShipmentOptions) GetPrintInvoiceNumber() string {
	if o == nil || IsNil(o.PrintInvoiceNumber) {
		var ret string
		return ret
	}
	return *o.PrintInvoiceNumber
}

// GetPrintInvoiceNumberOk returns a tuple with the PrintInvoiceNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetPrintInvoiceNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PrintInvoiceNumber) {
		return nil, false
	}
	return o.PrintInvoiceNumber, true
}

// HasPrintInvoiceNumber returns a boolean if a field has been set.
func (o *ShipmentOptions) HasPrintInvoiceNumber() bool {
	if o != nil && !IsNil(o.PrintInvoiceNumber) {
		return true
	}

	return false
}

// SetPrintInvoiceNumber gets a reference to the given string and assigns it to the PrintInvoiceNumber field.
func (o *ShipmentOptions) SetPrintInvoiceNumber(v string) {
	o.PrintInvoiceNumber = &v
}

// GetPrintPONumber returns the PrintPONumber field value if set, zero value otherwise.
func (o *ShipmentOptions) GetPrintPONumber() string {
	if o == nil || IsNil(o.PrintPONumber) {
		var ret string
		return ret
	}
	return *o.PrintPONumber
}

// GetPrintPONumberOk returns a tuple with the PrintPONumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetPrintPONumberOk() (*string, bool) {
	if o == nil || IsNil(o.PrintPONumber) {
		return nil, false
	}
	return o.PrintPONumber, true
}

// HasPrintPONumber returns a boolean if a field has been set.
func (o *ShipmentOptions) HasPrintPONumber() bool {
	if o != nil && !IsNil(o.PrintPONumber) {
		return true
	}

	return false
}

// SetPrintPONumber gets a reference to the given string and assigns it to the PrintPONumber field.
func (o *ShipmentOptions) SetPrintPONumber(v string) {
	o.PrintPONumber = &v
}

// GetPackageDescription returns the PackageDescription field value if set, zero value otherwise.
func (o *ShipmentOptions) GetPackageDescription() string {
	if o == nil || IsNil(o.PackageDescription) {
		var ret string
		return ret
	}
	return *o.PackageDescription
}

// GetPackageDescriptionOk returns a tuple with the PackageDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentOptions) GetPackageDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.PackageDescription) {
		return nil, false
	}
	return o.PackageDescription, true
}

// HasPackageDescription returns a boolean if a field has been set.
func (o *ShipmentOptions) HasPackageDescription() bool {
	if o != nil && !IsNil(o.PackageDescription) {
		return true
	}

	return false
}

// SetPackageDescription gets a reference to the given string and assigns it to the PackageDescription field.
func (o *ShipmentOptions) SetPackageDescription(v string) {
	o.PackageDescription = &v
}

func (o ShipmentOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AddToManifest) {
		toSerialize["addToManifest"] = o.AddToManifest
	}
	if !IsNil(o.PrintCustomMessage) {
		toSerialize["printCustomMessage"] = o.PrintCustomMessage
	}
	if !IsNil(o.ReceiptOption) {
		toSerialize["receiptOption"] = o.ReceiptOption
	}
	if !IsNil(o.PrintDepartment) {
		toSerialize["printDepartment"] = o.PrintDepartment
	}
	if !IsNil(o.PrintInvoiceNumber) {
		toSerialize["printInvoiceNumber"] = o.PrintInvoiceNumber
	}
	if !IsNil(o.PrintPONumber) {
		toSerialize["printPONumber"] = o.PrintPONumber
	}
	if !IsNil(o.PackageDescription) {
		toSerialize["packageDescription"] = o.PackageDescription
	}
	return toSerialize, nil
}

type NullableShipmentOptions struct {
	value *ShipmentOptions
	isSet bool
}

func (v NullableShipmentOptions) Get() *ShipmentOptions {
	return v.value
}

func (v *NullableShipmentOptions) Set(val *ShipmentOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentOptions(val *ShipmentOptions) *NullableShipmentOptions {
	return &NullableShipmentOptions{value: val, isSet: true}
}

func (v NullableShipmentOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


