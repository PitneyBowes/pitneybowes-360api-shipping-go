/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the SchedulePickupUSPSResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupUSPSResponse{}

// SchedulePickupUSPSResponse struct for SchedulePickupUSPSResponse
type SchedulePickupUSPSResponse struct {
	// It specifies the location from where packages would be collected.
	PackageLocation *string `json:"packageLocation,omitempty"`
	// It displays the unique confirmation number of the pickup
	PickupConfirmationNumber *string `json:"pickupConfirmationNumber,omitempty"`
	// It displays the unique pickup Id which can be further used to get scheduled PDF and cancel pdf if required.
	PickupId *string `json:"pickupId,omitempty"`
	// It dispays the carrier
	Carrier *string `json:"carrier,omitempty"`
	// It displays the carrier acount id which is used to create the shipment
	CarrierAccountId *string `json:"carrierAccountId,omitempty"`
	PickupAddress *SchedulePickupDHLEXPResponsePickupAddress `json:"pickupAddress,omitempty"`
	// It indicates the shipmentIds for which pickup is scheduled.
	ShipmentIds []string `json:"shipmentIds,omitempty"`
	// It displays the package details provided in the request.
	PickupSummary []SchedulePickupUSPSResponsePickupSummaryInner `json:"pickupSummary,omitempty"`
	// It displays additional comments or remarks provided in the request, it would be printed on the scheduled pickup document
	Additionalnotes *string `json:"additionalnotes,omitempty"`
	// It displays any reference information provided in the request.
	Reference *string `json:"reference,omitempty"`
	// It displays the scheduled pickup date
	PickupDateTime *string `json:"pickupDateTime,omitempty"`
	// It displays the total package weight.
	PickupTotalWeight *float32 `json:"pickupTotalWeight,omitempty"`
	// It displays the weight unit.
	PickupTotalWeightUnit *string `json:"pickupTotalWeightUnit,omitempty"`
}

// NewSchedulePickupUSPSResponse instantiates a new SchedulePickupUSPSResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupUSPSResponse() *SchedulePickupUSPSResponse {
	this := SchedulePickupUSPSResponse{}
	return &this
}

// NewSchedulePickupUSPSResponseWithDefaults instantiates a new SchedulePickupUSPSResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupUSPSResponseWithDefaults() *SchedulePickupUSPSResponse {
	this := SchedulePickupUSPSResponse{}
	return &this
}

// GetPackageLocation returns the PackageLocation field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPackageLocation() string {
	if o == nil || IsNil(o.PackageLocation) {
		var ret string
		return ret
	}
	return *o.PackageLocation
}

// GetPackageLocationOk returns a tuple with the PackageLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPackageLocationOk() (*string, bool) {
	if o == nil || IsNil(o.PackageLocation) {
		return nil, false
	}
	return o.PackageLocation, true
}

// HasPackageLocation returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPackageLocation() bool {
	if o != nil && !IsNil(o.PackageLocation) {
		return true
	}

	return false
}

// SetPackageLocation gets a reference to the given string and assigns it to the PackageLocation field.
func (o *SchedulePickupUSPSResponse) SetPackageLocation(v string) {
	o.PackageLocation = &v
}

// GetPickupConfirmationNumber returns the PickupConfirmationNumber field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupConfirmationNumber() string {
	if o == nil || IsNil(o.PickupConfirmationNumber) {
		var ret string
		return ret
	}
	return *o.PickupConfirmationNumber
}

// GetPickupConfirmationNumberOk returns a tuple with the PickupConfirmationNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupConfirmationNumberOk() (*string, bool) {
	if o == nil || IsNil(o.PickupConfirmationNumber) {
		return nil, false
	}
	return o.PickupConfirmationNumber, true
}

// HasPickupConfirmationNumber returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupConfirmationNumber() bool {
	if o != nil && !IsNil(o.PickupConfirmationNumber) {
		return true
	}

	return false
}

// SetPickupConfirmationNumber gets a reference to the given string and assigns it to the PickupConfirmationNumber field.
func (o *SchedulePickupUSPSResponse) SetPickupConfirmationNumber(v string) {
	o.PickupConfirmationNumber = &v
}

// GetPickupId returns the PickupId field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupId() string {
	if o == nil || IsNil(o.PickupId) {
		var ret string
		return ret
	}
	return *o.PickupId
}

// GetPickupIdOk returns a tuple with the PickupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupIdOk() (*string, bool) {
	if o == nil || IsNil(o.PickupId) {
		return nil, false
	}
	return o.PickupId, true
}

// HasPickupId returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupId() bool {
	if o != nil && !IsNil(o.PickupId) {
		return true
	}

	return false
}

// SetPickupId gets a reference to the given string and assigns it to the PickupId field.
func (o *SchedulePickupUSPSResponse) SetPickupId(v string) {
	o.PickupId = &v
}

// GetCarrier returns the Carrier field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetCarrier() string {
	if o == nil || IsNil(o.Carrier) {
		var ret string
		return ret
	}
	return *o.Carrier
}

// GetCarrierOk returns a tuple with the Carrier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetCarrierOk() (*string, bool) {
	if o == nil || IsNil(o.Carrier) {
		return nil, false
	}
	return o.Carrier, true
}

// HasCarrier returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasCarrier() bool {
	if o != nil && !IsNil(o.Carrier) {
		return true
	}

	return false
}

// SetCarrier gets a reference to the given string and assigns it to the Carrier field.
func (o *SchedulePickupUSPSResponse) SetCarrier(v string) {
	o.Carrier = &v
}

// GetCarrierAccountId returns the CarrierAccountId field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetCarrierAccountId() string {
	if o == nil || IsNil(o.CarrierAccountId) {
		var ret string
		return ret
	}
	return *o.CarrierAccountId
}

// GetCarrierAccountIdOk returns a tuple with the CarrierAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetCarrierAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierAccountId) {
		return nil, false
	}
	return o.CarrierAccountId, true
}

// HasCarrierAccountId returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasCarrierAccountId() bool {
	if o != nil && !IsNil(o.CarrierAccountId) {
		return true
	}

	return false
}

// SetCarrierAccountId gets a reference to the given string and assigns it to the CarrierAccountId field.
func (o *SchedulePickupUSPSResponse) SetCarrierAccountId(v string) {
	o.CarrierAccountId = &v
}

// GetPickupAddress returns the PickupAddress field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupAddress() SchedulePickupDHLEXPResponsePickupAddress {
	if o == nil || IsNil(o.PickupAddress) {
		var ret SchedulePickupDHLEXPResponsePickupAddress
		return ret
	}
	return *o.PickupAddress
}

// GetPickupAddressOk returns a tuple with the PickupAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupAddressOk() (*SchedulePickupDHLEXPResponsePickupAddress, bool) {
	if o == nil || IsNil(o.PickupAddress) {
		return nil, false
	}
	return o.PickupAddress, true
}

// HasPickupAddress returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupAddress() bool {
	if o != nil && !IsNil(o.PickupAddress) {
		return true
	}

	return false
}

// SetPickupAddress gets a reference to the given SchedulePickupDHLEXPResponsePickupAddress and assigns it to the PickupAddress field.
func (o *SchedulePickupUSPSResponse) SetPickupAddress(v SchedulePickupDHLEXPResponsePickupAddress) {
	o.PickupAddress = &v
}

// GetShipmentIds returns the ShipmentIds field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetShipmentIds() []string {
	if o == nil || IsNil(o.ShipmentIds) {
		var ret []string
		return ret
	}
	return o.ShipmentIds
}

// GetShipmentIdsOk returns a tuple with the ShipmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetShipmentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ShipmentIds) {
		return nil, false
	}
	return o.ShipmentIds, true
}

// HasShipmentIds returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasShipmentIds() bool {
	if o != nil && !IsNil(o.ShipmentIds) {
		return true
	}

	return false
}

// SetShipmentIds gets a reference to the given []string and assigns it to the ShipmentIds field.
func (o *SchedulePickupUSPSResponse) SetShipmentIds(v []string) {
	o.ShipmentIds = v
}

// GetPickupSummary returns the PickupSummary field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupSummary() []SchedulePickupUSPSResponsePickupSummaryInner {
	if o == nil || IsNil(o.PickupSummary) {
		var ret []SchedulePickupUSPSResponsePickupSummaryInner
		return ret
	}
	return o.PickupSummary
}

// GetPickupSummaryOk returns a tuple with the PickupSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupSummaryOk() ([]SchedulePickupUSPSResponsePickupSummaryInner, bool) {
	if o == nil || IsNil(o.PickupSummary) {
		return nil, false
	}
	return o.PickupSummary, true
}

// HasPickupSummary returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupSummary() bool {
	if o != nil && !IsNil(o.PickupSummary) {
		return true
	}

	return false
}

// SetPickupSummary gets a reference to the given []SchedulePickupUSPSResponsePickupSummaryInner and assigns it to the PickupSummary field.
func (o *SchedulePickupUSPSResponse) SetPickupSummary(v []SchedulePickupUSPSResponsePickupSummaryInner) {
	o.PickupSummary = v
}

// GetAdditionalnotes returns the Additionalnotes field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetAdditionalnotes() string {
	if o == nil || IsNil(o.Additionalnotes) {
		var ret string
		return ret
	}
	return *o.Additionalnotes
}

// GetAdditionalnotesOk returns a tuple with the Additionalnotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetAdditionalnotesOk() (*string, bool) {
	if o == nil || IsNil(o.Additionalnotes) {
		return nil, false
	}
	return o.Additionalnotes, true
}

// HasAdditionalnotes returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasAdditionalnotes() bool {
	if o != nil && !IsNil(o.Additionalnotes) {
		return true
	}

	return false
}

// SetAdditionalnotes gets a reference to the given string and assigns it to the Additionalnotes field.
func (o *SchedulePickupUSPSResponse) SetAdditionalnotes(v string) {
	o.Additionalnotes = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SchedulePickupUSPSResponse) SetReference(v string) {
	o.Reference = &v
}

// GetPickupDateTime returns the PickupDateTime field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupDateTime() string {
	if o == nil || IsNil(o.PickupDateTime) {
		var ret string
		return ret
	}
	return *o.PickupDateTime
}

// GetPickupDateTimeOk returns a tuple with the PickupDateTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupDateTimeOk() (*string, bool) {
	if o == nil || IsNil(o.PickupDateTime) {
		return nil, false
	}
	return o.PickupDateTime, true
}

// HasPickupDateTime returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupDateTime() bool {
	if o != nil && !IsNil(o.PickupDateTime) {
		return true
	}

	return false
}

// SetPickupDateTime gets a reference to the given string and assigns it to the PickupDateTime field.
func (o *SchedulePickupUSPSResponse) SetPickupDateTime(v string) {
	o.PickupDateTime = &v
}

// GetPickupTotalWeight returns the PickupTotalWeight field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupTotalWeight() float32 {
	if o == nil || IsNil(o.PickupTotalWeight) {
		var ret float32
		return ret
	}
	return *o.PickupTotalWeight
}

// GetPickupTotalWeightOk returns a tuple with the PickupTotalWeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupTotalWeightOk() (*float32, bool) {
	if o == nil || IsNil(o.PickupTotalWeight) {
		return nil, false
	}
	return o.PickupTotalWeight, true
}

// HasPickupTotalWeight returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupTotalWeight() bool {
	if o != nil && !IsNil(o.PickupTotalWeight) {
		return true
	}

	return false
}

// SetPickupTotalWeight gets a reference to the given float32 and assigns it to the PickupTotalWeight field.
func (o *SchedulePickupUSPSResponse) SetPickupTotalWeight(v float32) {
	o.PickupTotalWeight = &v
}

// GetPickupTotalWeightUnit returns the PickupTotalWeightUnit field value if set, zero value otherwise.
func (o *SchedulePickupUSPSResponse) GetPickupTotalWeightUnit() string {
	if o == nil || IsNil(o.PickupTotalWeightUnit) {
		var ret string
		return ret
	}
	return *o.PickupTotalWeightUnit
}

// GetPickupTotalWeightUnitOk returns a tuple with the PickupTotalWeightUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUSPSResponse) GetPickupTotalWeightUnitOk() (*string, bool) {
	if o == nil || IsNil(o.PickupTotalWeightUnit) {
		return nil, false
	}
	return o.PickupTotalWeightUnit, true
}

// HasPickupTotalWeightUnit returns a boolean if a field has been set.
func (o *SchedulePickupUSPSResponse) HasPickupTotalWeightUnit() bool {
	if o != nil && !IsNil(o.PickupTotalWeightUnit) {
		return true
	}

	return false
}

// SetPickupTotalWeightUnit gets a reference to the given string and assigns it to the PickupTotalWeightUnit field.
func (o *SchedulePickupUSPSResponse) SetPickupTotalWeightUnit(v string) {
	o.PickupTotalWeightUnit = &v
}

func (o SchedulePickupUSPSResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupUSPSResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PackageLocation) {
		toSerialize["packageLocation"] = o.PackageLocation
	}
	if !IsNil(o.PickupConfirmationNumber) {
		toSerialize["pickupConfirmationNumber"] = o.PickupConfirmationNumber
	}
	if !IsNil(o.PickupId) {
		toSerialize["pickupId"] = o.PickupId
	}
	if !IsNil(o.Carrier) {
		toSerialize["carrier"] = o.Carrier
	}
	if !IsNil(o.CarrierAccountId) {
		toSerialize["carrierAccountId"] = o.CarrierAccountId
	}
	if !IsNil(o.PickupAddress) {
		toSerialize["pickupAddress"] = o.PickupAddress
	}
	if !IsNil(o.ShipmentIds) {
		toSerialize["shipmentIds"] = o.ShipmentIds
	}
	if !IsNil(o.PickupSummary) {
		toSerialize["pickupSummary"] = o.PickupSummary
	}
	if !IsNil(o.Additionalnotes) {
		toSerialize["additionalnotes"] = o.Additionalnotes
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	if !IsNil(o.PickupDateTime) {
		toSerialize["pickupDateTime"] = o.PickupDateTime
	}
	if !IsNil(o.PickupTotalWeight) {
		toSerialize["pickupTotalWeight"] = o.PickupTotalWeight
	}
	if !IsNil(o.PickupTotalWeightUnit) {
		toSerialize["pickupTotalWeightUnit"] = o.PickupTotalWeightUnit
	}
	return toSerialize, nil
}

type NullableSchedulePickupUSPSResponse struct {
	value *SchedulePickupUSPSResponse
	isSet bool
}

func (v NullableSchedulePickupUSPSResponse) Get() *SchedulePickupUSPSResponse {
	return v.value
}

func (v *NullableSchedulePickupUSPSResponse) Set(val *SchedulePickupUSPSResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupUSPSResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupUSPSResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupUSPSResponse(val *SchedulePickupUSPSResponse) *NullableSchedulePickupUSPSResponse {
	return &NullableSchedulePickupUSPSResponse{value: val, isSet: true}
}

func (v NullableSchedulePickupUSPSResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupUSPSResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


