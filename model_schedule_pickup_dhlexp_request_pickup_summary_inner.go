/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchedulePickupDHLEXPRequestPickupSummaryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupDHLEXPRequestPickupSummaryInner{}

// SchedulePickupDHLEXPRequestPickupSummaryInner struct for SchedulePickupDHLEXPRequestPickupSummaryInner
type SchedulePickupDHLEXPRequestPickupSummaryInner struct {
	// The service id
	ServiceId string `json:"serviceId"`
	// The total number of packages
	PackageCount float32 `json:"packageCount"`
	// The total weight of the packages
	TotalWeight float32 `json:"totalWeight"`
	// Weight Unit, supported values are `OZ` and `GM`
	WeightUnit string `json:"weightUnit"`
	// Currency code
	CurrencyCode string `json:"currencyCode"`
	// It indicates the custom declared value. It is required in case of international shipment.
	TotalCustomsDeclaredValue *float32 `json:"totalCustomsDeclaredValue,omitempty"`
	// It descibes the individual package details
	PackageDetails []SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner `json:"packageDetails"`
}

type _SchedulePickupDHLEXPRequestPickupSummaryInner SchedulePickupDHLEXPRequestPickupSummaryInner

// NewSchedulePickupDHLEXPRequestPickupSummaryInner instantiates a new SchedulePickupDHLEXPRequestPickupSummaryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupDHLEXPRequestPickupSummaryInner(serviceId string, packageCount float32, totalWeight float32, weightUnit string, currencyCode string, packageDetails []SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner) *SchedulePickupDHLEXPRequestPickupSummaryInner {
	this := SchedulePickupDHLEXPRequestPickupSummaryInner{}
	this.ServiceId = serviceId
	this.PackageCount = packageCount
	this.TotalWeight = totalWeight
	this.WeightUnit = weightUnit
	this.CurrencyCode = currencyCode
	this.PackageDetails = packageDetails
	return &this
}

// NewSchedulePickupDHLEXPRequestPickupSummaryInnerWithDefaults instantiates a new SchedulePickupDHLEXPRequestPickupSummaryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupDHLEXPRequestPickupSummaryInnerWithDefaults() *SchedulePickupDHLEXPRequestPickupSummaryInner {
	this := SchedulePickupDHLEXPRequestPickupSummaryInner{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetServiceId(v string) {
	o.ServiceId = v
}

// GetPackageCount returns the PackageCount field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetPackageCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PackageCount
}

// GetPackageCountOk returns a tuple with the PackageCount field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetPackageCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageCount, true
}

// SetPackageCount sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetPackageCount(v float32) {
	o.PackageCount = v
}

// GetTotalWeight returns the TotalWeight field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetTotalWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalWeight
}

// GetTotalWeightOk returns a tuple with the TotalWeight field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetTotalWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalWeight, true
}

// SetTotalWeight sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetTotalWeight(v float32) {
	o.TotalWeight = v
}

// GetWeightUnit returns the WeightUnit field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetWeightUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetWeightUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeightUnit, true
}

// SetWeightUnit sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetWeightUnit(v string) {
	o.WeightUnit = v
}

// GetCurrencyCode returns the CurrencyCode field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetCurrencyCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CurrencyCode
}

// GetCurrencyCodeOk returns a tuple with the CurrencyCode field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetCurrencyCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CurrencyCode, true
}

// SetCurrencyCode sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetCurrencyCode(v string) {
	o.CurrencyCode = v
}

// GetTotalCustomsDeclaredValue returns the TotalCustomsDeclaredValue field value if set, zero value otherwise.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetTotalCustomsDeclaredValue() float32 {
	if o == nil || IsNil(o.TotalCustomsDeclaredValue) {
		var ret float32
		return ret
	}
	return *o.TotalCustomsDeclaredValue
}

// GetTotalCustomsDeclaredValueOk returns a tuple with the TotalCustomsDeclaredValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetTotalCustomsDeclaredValueOk() (*float32, bool) {
	if o == nil || IsNil(o.TotalCustomsDeclaredValue) {
		return nil, false
	}
	return o.TotalCustomsDeclaredValue, true
}

// HasTotalCustomsDeclaredValue returns a boolean if a field has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) HasTotalCustomsDeclaredValue() bool {
	if o != nil && !IsNil(o.TotalCustomsDeclaredValue) {
		return true
	}

	return false
}

// SetTotalCustomsDeclaredValue gets a reference to the given float32 and assigns it to the TotalCustomsDeclaredValue field.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetTotalCustomsDeclaredValue(v float32) {
	o.TotalCustomsDeclaredValue = &v
}

// GetPackageDetails returns the PackageDetails field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetPackageDetails() []SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner {
	if o == nil {
		var ret []SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner
		return ret
	}

	return o.PackageDetails
}

// GetPackageDetailsOk returns a tuple with the PackageDetails field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) GetPackageDetailsOk() ([]SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.PackageDetails, true
}

// SetPackageDetails sets field value
func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) SetPackageDetails(v []SchedulePickupDHLEXPRequestPickupSummaryInnerPackageDetailsInner) {
	o.PackageDetails = v
}

func (o SchedulePickupDHLEXPRequestPickupSummaryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupDHLEXPRequestPickupSummaryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["packageCount"] = o.PackageCount
	toSerialize["totalWeight"] = o.TotalWeight
	toSerialize["weightUnit"] = o.WeightUnit
	toSerialize["currencyCode"] = o.CurrencyCode
	if !IsNil(o.TotalCustomsDeclaredValue) {
		toSerialize["totalCustomsDeclaredValue"] = o.TotalCustomsDeclaredValue
	}
	toSerialize["packageDetails"] = o.PackageDetails
	return toSerialize, nil
}

func (o *SchedulePickupDHLEXPRequestPickupSummaryInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serviceId",
		"packageCount",
		"totalWeight",
		"weightUnit",
		"currencyCode",
		"packageDetails",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchedulePickupDHLEXPRequestPickupSummaryInner := _SchedulePickupDHLEXPRequestPickupSummaryInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchedulePickupDHLEXPRequestPickupSummaryInner)

	if err != nil {
		return err
	}

	*o = SchedulePickupDHLEXPRequestPickupSummaryInner(varSchedulePickupDHLEXPRequestPickupSummaryInner)

	return err
}

type NullableSchedulePickupDHLEXPRequestPickupSummaryInner struct {
	value *SchedulePickupDHLEXPRequestPickupSummaryInner
	isSet bool
}

func (v NullableSchedulePickupDHLEXPRequestPickupSummaryInner) Get() *SchedulePickupDHLEXPRequestPickupSummaryInner {
	return v.value
}

func (v *NullableSchedulePickupDHLEXPRequestPickupSummaryInner) Set(val *SchedulePickupDHLEXPRequestPickupSummaryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupDHLEXPRequestPickupSummaryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupDHLEXPRequestPickupSummaryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupDHLEXPRequestPickupSummaryInner(val *SchedulePickupDHLEXPRequestPickupSummaryInner) *NullableSchedulePickupDHLEXPRequestPickupSummaryInner {
	return &NullableSchedulePickupDHLEXPRequestPickupSummaryInner{value: val, isSet: true}
}

func (v NullableSchedulePickupDHLEXPRequestPickupSummaryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupDHLEXPRequestPickupSummaryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


