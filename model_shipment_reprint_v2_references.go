/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the ShipmentReprintV2References type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentReprintV2References{}

// ShipmentReprintV2References Contains key value map for passing references which is printed on Shipping Label. <br />For example Department Name, Invoice No., PO No., Package description, Order No./ Purchase Order No., Carrier note, Cost Account No., Transportation No., etc. . Max references allowed here is 2, and max length of each Reference field is 30. [IN/OUT].
type ShipmentReprintV2References struct {
	// Additional Reference is hardly used, but sender can mention anything as per requirement, just for Recipient's information. <br /> `Max length = 30`.
	AdditionalReference1 *string `json:"additionalReference1,omitempty"`
	// Any tags or information that to be shown to Recipient, can be mentioned by Sender, which is not indicated on AdditionalReference1 field, e.g. PO No, Order No. etc.<br /> `Max length = 30`.
	AdditionalReference2 *string `json:"additionalReference2,omitempty"`
}

// NewShipmentReprintV2References instantiates a new ShipmentReprintV2References object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentReprintV2References() *ShipmentReprintV2References {
	this := ShipmentReprintV2References{}
	return &this
}

// NewShipmentReprintV2ReferencesWithDefaults instantiates a new ShipmentReprintV2References object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentReprintV2ReferencesWithDefaults() *ShipmentReprintV2References {
	this := ShipmentReprintV2References{}
	return &this
}

// GetAdditionalReference1 returns the AdditionalReference1 field value if set, zero value otherwise.
func (o *ShipmentReprintV2References) GetAdditionalReference1() string {
	if o == nil || IsNil(o.AdditionalReference1) {
		var ret string
		return ret
	}
	return *o.AdditionalReference1
}

// GetAdditionalReference1Ok returns a tuple with the AdditionalReference1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReprintV2References) GetAdditionalReference1Ok() (*string, bool) {
	if o == nil || IsNil(o.AdditionalReference1) {
		return nil, false
	}
	return o.AdditionalReference1, true
}

// HasAdditionalReference1 returns a boolean if a field has been set.
func (o *ShipmentReprintV2References) HasAdditionalReference1() bool {
	if o != nil && !IsNil(o.AdditionalReference1) {
		return true
	}

	return false
}

// SetAdditionalReference1 gets a reference to the given string and assigns it to the AdditionalReference1 field.
func (o *ShipmentReprintV2References) SetAdditionalReference1(v string) {
	o.AdditionalReference1 = &v
}

// GetAdditionalReference2 returns the AdditionalReference2 field value if set, zero value otherwise.
func (o *ShipmentReprintV2References) GetAdditionalReference2() string {
	if o == nil || IsNil(o.AdditionalReference2) {
		var ret string
		return ret
	}
	return *o.AdditionalReference2
}

// GetAdditionalReference2Ok returns a tuple with the AdditionalReference2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentReprintV2References) GetAdditionalReference2Ok() (*string, bool) {
	if o == nil || IsNil(o.AdditionalReference2) {
		return nil, false
	}
	return o.AdditionalReference2, true
}

// HasAdditionalReference2 returns a boolean if a field has been set.
func (o *ShipmentReprintV2References) HasAdditionalReference2() bool {
	if o != nil && !IsNil(o.AdditionalReference2) {
		return true
	}

	return false
}

// SetAdditionalReference2 gets a reference to the given string and assigns it to the AdditionalReference2 field.
func (o *ShipmentReprintV2References) SetAdditionalReference2(v string) {
	o.AdditionalReference2 = &v
}

func (o ShipmentReprintV2References) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentReprintV2References) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalReference1) {
		toSerialize["additionalReference1"] = o.AdditionalReference1
	}
	if !IsNil(o.AdditionalReference2) {
		toSerialize["additionalReference2"] = o.AdditionalReference2
	}
	return toSerialize, nil
}

type NullableShipmentReprintV2References struct {
	value *ShipmentReprintV2References
	isSet bool
}

func (v NullableShipmentReprintV2References) Get() *ShipmentReprintV2References {
	return v.value
}

func (v *NullableShipmentReprintV2References) Set(val *ShipmentReprintV2References) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentReprintV2References) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentReprintV2References) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentReprintV2References(val *ShipmentReprintV2References) *NullableShipmentReprintV2References {
	return &NullableShipmentReprintV2References{value: val, isSet: true}
}

func (v NullableShipmentReprintV2References) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentReprintV2References) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


