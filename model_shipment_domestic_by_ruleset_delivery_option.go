/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the ShipmentDomesticByRulesetDeliveryOption type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentDomesticByRulesetDeliveryOption{}

// ShipmentDomesticByRulesetDeliveryOption There are two options of delivery: deliverBy and useBestNextDate, where customer can schedule the delivery date in deliverBy. <br /> In case if the customer's scheduled `deliverBy` date falls under Holiday, then `useBestNextDate` will be used by our system. Then, we will mark the second option and deliver the same.
type ShipmentDomesticByRulesetDeliveryOption struct {
	// Delivery date is the data when shipment is to be delivered, which is scheduled by sender. The format of the Date is YYYY-MM-DD. <br /> This field will be mandatory to provide, if the customer chooses ruleType is deliverBy.
	DeliverBy *string `json:"deliverBy,omitempty"`
	// When this is set to true, if the scheduled delivery date falls on a Holiday or there is no carrier to deliver on the deliverby date, then the next business day will be considered to deliver the shipment.
	UseBestNextDate *bool `json:"useBestNextDate,omitempty"`
}

// NewShipmentDomesticByRulesetDeliveryOption instantiates a new ShipmentDomesticByRulesetDeliveryOption object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentDomesticByRulesetDeliveryOption() *ShipmentDomesticByRulesetDeliveryOption {
	this := ShipmentDomesticByRulesetDeliveryOption{}
	return &this
}

// NewShipmentDomesticByRulesetDeliveryOptionWithDefaults instantiates a new ShipmentDomesticByRulesetDeliveryOption object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentDomesticByRulesetDeliveryOptionWithDefaults() *ShipmentDomesticByRulesetDeliveryOption {
	this := ShipmentDomesticByRulesetDeliveryOption{}
	return &this
}

// GetDeliverBy returns the DeliverBy field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetDeliveryOption) GetDeliverBy() string {
	if o == nil || IsNil(o.DeliverBy) {
		var ret string
		return ret
	}
	return *o.DeliverBy
}

// GetDeliverByOk returns a tuple with the DeliverBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetDeliveryOption) GetDeliverByOk() (*string, bool) {
	if o == nil || IsNil(o.DeliverBy) {
		return nil, false
	}
	return o.DeliverBy, true
}

// HasDeliverBy returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetDeliveryOption) HasDeliverBy() bool {
	if o != nil && !IsNil(o.DeliverBy) {
		return true
	}

	return false
}

// SetDeliverBy gets a reference to the given string and assigns it to the DeliverBy field.
func (o *ShipmentDomesticByRulesetDeliveryOption) SetDeliverBy(v string) {
	o.DeliverBy = &v
}

// GetUseBestNextDate returns the UseBestNextDate field value if set, zero value otherwise.
func (o *ShipmentDomesticByRulesetDeliveryOption) GetUseBestNextDate() bool {
	if o == nil || IsNil(o.UseBestNextDate) {
		var ret bool
		return ret
	}
	return *o.UseBestNextDate
}

// GetUseBestNextDateOk returns a tuple with the UseBestNextDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRulesetDeliveryOption) GetUseBestNextDateOk() (*bool, bool) {
	if o == nil || IsNil(o.UseBestNextDate) {
		return nil, false
	}
	return o.UseBestNextDate, true
}

// HasUseBestNextDate returns a boolean if a field has been set.
func (o *ShipmentDomesticByRulesetDeliveryOption) HasUseBestNextDate() bool {
	if o != nil && !IsNil(o.UseBestNextDate) {
		return true
	}

	return false
}

// SetUseBestNextDate gets a reference to the given bool and assigns it to the UseBestNextDate field.
func (o *ShipmentDomesticByRulesetDeliveryOption) SetUseBestNextDate(v bool) {
	o.UseBestNextDate = &v
}

func (o ShipmentDomesticByRulesetDeliveryOption) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentDomesticByRulesetDeliveryOption) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DeliverBy) {
		toSerialize["deliverBy"] = o.DeliverBy
	}
	if !IsNil(o.UseBestNextDate) {
		toSerialize["useBestNextDate"] = o.UseBestNextDate
	}
	return toSerialize, nil
}

type NullableShipmentDomesticByRulesetDeliveryOption struct {
	value *ShipmentDomesticByRulesetDeliveryOption
	isSet bool
}

func (v NullableShipmentDomesticByRulesetDeliveryOption) Get() *ShipmentDomesticByRulesetDeliveryOption {
	return v.value
}

func (v *NullableShipmentDomesticByRulesetDeliveryOption) Set(val *ShipmentDomesticByRulesetDeliveryOption) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentDomesticByRulesetDeliveryOption) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentDomesticByRulesetDeliveryOption) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentDomesticByRulesetDeliveryOption(val *ShipmentDomesticByRulesetDeliveryOption) *NullableShipmentDomesticByRulesetDeliveryOption {
	return &NullableShipmentDomesticByRulesetDeliveryOption{value: val, isSet: true}
}

func (v NullableShipmentDomesticByRulesetDeliveryOption) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentDomesticByRulesetDeliveryOption) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


