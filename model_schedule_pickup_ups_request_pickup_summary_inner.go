/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchedulePickupUPSRequestPickupSummaryInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupUPSRequestPickupSummaryInner{}

// SchedulePickupUPSRequestPickupSummaryInner struct for SchedulePickupUPSRequestPickupSummaryInner
type SchedulePickupUPSRequestPickupSummaryInner struct {
	// The service id
	ServiceId string `json:"serviceId"`
	// The total number of packages
	PackageCount float32 `json:"packageCount"`
	// The total weight of the packages
	TotalWeight float32 `json:"totalWeight"`
	// Weight Unit, supported values are `OZ` and `GM`
	WeightUnit string `json:"weightUnit"`
	// It indicates the parcel type, applicable values are- `PKG`,`LTR`,`TUBE`,`PACK`,`BOX`,`25KG`,`10KG`,`SMALL_EXP_BOX`,`MED_EXP_BOX`,`LG_EXP_BOX`
	ParcelType string `json:"parcelType"`
	// It indicates the 2 characters- ISO country code of recipient of the shipment.
	ToAddressCountryCode string `json:"toAddressCountryCode"`
}

type _SchedulePickupUPSRequestPickupSummaryInner SchedulePickupUPSRequestPickupSummaryInner

// NewSchedulePickupUPSRequestPickupSummaryInner instantiates a new SchedulePickupUPSRequestPickupSummaryInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupUPSRequestPickupSummaryInner(serviceId string, packageCount float32, totalWeight float32, weightUnit string, parcelType string, toAddressCountryCode string) *SchedulePickupUPSRequestPickupSummaryInner {
	this := SchedulePickupUPSRequestPickupSummaryInner{}
	this.ServiceId = serviceId
	this.PackageCount = packageCount
	this.TotalWeight = totalWeight
	this.WeightUnit = weightUnit
	this.ParcelType = parcelType
	this.ToAddressCountryCode = toAddressCountryCode
	return &this
}

// NewSchedulePickupUPSRequestPickupSummaryInnerWithDefaults instantiates a new SchedulePickupUPSRequestPickupSummaryInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupUPSRequestPickupSummaryInnerWithDefaults() *SchedulePickupUPSRequestPickupSummaryInner {
	this := SchedulePickupUPSRequestPickupSummaryInner{}
	return &this
}

// GetServiceId returns the ServiceId field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetServiceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetServiceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceId, true
}

// SetServiceId sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetServiceId(v string) {
	o.ServiceId = v
}

// GetPackageCount returns the PackageCount field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetPackageCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.PackageCount
}

// GetPackageCountOk returns a tuple with the PackageCount field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetPackageCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageCount, true
}

// SetPackageCount sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetPackageCount(v float32) {
	o.PackageCount = v
}

// GetTotalWeight returns the TotalWeight field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetTotalWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.TotalWeight
}

// GetTotalWeightOk returns a tuple with the TotalWeight field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetTotalWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalWeight, true
}

// SetTotalWeight sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetTotalWeight(v float32) {
	o.TotalWeight = v
}

// GetWeightUnit returns the WeightUnit field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetWeightUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.WeightUnit
}

// GetWeightUnitOk returns a tuple with the WeightUnit field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetWeightUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WeightUnit, true
}

// SetWeightUnit sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetWeightUnit(v string) {
	o.WeightUnit = v
}

// GetParcelType returns the ParcelType field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetParcelType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetParcelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ParcelType, true
}

// SetParcelType sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetParcelType(v string) {
	o.ParcelType = v
}

// GetToAddressCountryCode returns the ToAddressCountryCode field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetToAddressCountryCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ToAddressCountryCode
}

// GetToAddressCountryCodeOk returns a tuple with the ToAddressCountryCode field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequestPickupSummaryInner) GetToAddressCountryCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddressCountryCode, true
}

// SetToAddressCountryCode sets field value
func (o *SchedulePickupUPSRequestPickupSummaryInner) SetToAddressCountryCode(v string) {
	o.ToAddressCountryCode = v
}

func (o SchedulePickupUPSRequestPickupSummaryInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupUPSRequestPickupSummaryInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serviceId"] = o.ServiceId
	toSerialize["packageCount"] = o.PackageCount
	toSerialize["totalWeight"] = o.TotalWeight
	toSerialize["weightUnit"] = o.WeightUnit
	toSerialize["parcelType"] = o.ParcelType
	toSerialize["toAddressCountryCode"] = o.ToAddressCountryCode
	return toSerialize, nil
}

func (o *SchedulePickupUPSRequestPickupSummaryInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serviceId",
		"packageCount",
		"totalWeight",
		"weightUnit",
		"parcelType",
		"toAddressCountryCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchedulePickupUPSRequestPickupSummaryInner := _SchedulePickupUPSRequestPickupSummaryInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchedulePickupUPSRequestPickupSummaryInner)

	if err != nil {
		return err
	}

	*o = SchedulePickupUPSRequestPickupSummaryInner(varSchedulePickupUPSRequestPickupSummaryInner)

	return err
}

type NullableSchedulePickupUPSRequestPickupSummaryInner struct {
	value *SchedulePickupUPSRequestPickupSummaryInner
	isSet bool
}

func (v NullableSchedulePickupUPSRequestPickupSummaryInner) Get() *SchedulePickupUPSRequestPickupSummaryInner {
	return v.value
}

func (v *NullableSchedulePickupUPSRequestPickupSummaryInner) Set(val *SchedulePickupUPSRequestPickupSummaryInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupUPSRequestPickupSummaryInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupUPSRequestPickupSummaryInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupUPSRequestPickupSummaryInner(val *SchedulePickupUPSRequestPickupSummaryInner) *NullableSchedulePickupUPSRequestPickupSummaryInner {
	return &NullableSchedulePickupUPSRequestPickupSummaryInner{value: val, isSet: true}
}

func (v NullableSchedulePickupUPSRequestPickupSummaryInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupUPSRequestPickupSummaryInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


