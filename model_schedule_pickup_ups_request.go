/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SchedulePickupUPSRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SchedulePickupUPSRequest{}

// SchedulePickupUPSRequest struct for SchedulePickupUPSRequest
type SchedulePickupUPSRequest struct {
	// It specifies the location from where packages would be collected. Applicable values are `Front Door`,`Back Door`,`Side Door`,`Shipping`,`Receiving`,`Knock on Door/Ring Bell`,`Mail Room`,`Garage`,`Office`,`Downstairs`,`Reception`,`In/At Mailbox`,`Third Party`,`Warehouse`,`Other`
	PackageLocation string `json:"packageLocation"`
	// It specifies the carrier account id, its value can be referenced from the `Get Carrier Accounts` API.
	CarrierAccountId string `json:"carrierAccountId"`
	PickupAddress SchedulePickupDHLEXPRequestPickupAddress `json:"pickupAddress"`
	// It indicates the shipmentIds for which pickup to be scheduled.
	ShipmentIds []string `json:"shipmentIds,omitempty"`
	// This can be used to add package details for which labels are not created yet but would want to schedule pickup in advance.
	PickupSummary []SchedulePickupUPSRequestPickupSummaryInner `json:"pickupSummary,omitempty"`
	// It can be used to provide any additional comments or remarks, it would be printed on the scheduled pickup document. It is required when packageLocation is set to `Other`.
	Additionalnotes *string `json:"additionalnotes,omitempty"`
	// It is used for any reference purpose
	Reference *string `json:"reference,omitempty"`
	PickupOptions SchedulePickupUPSRequestPickupOptions `json:"pickupOptions"`
}

type _SchedulePickupUPSRequest SchedulePickupUPSRequest

// NewSchedulePickupUPSRequest instantiates a new SchedulePickupUPSRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSchedulePickupUPSRequest(packageLocation string, carrierAccountId string, pickupAddress SchedulePickupDHLEXPRequestPickupAddress, pickupOptions SchedulePickupUPSRequestPickupOptions) *SchedulePickupUPSRequest {
	this := SchedulePickupUPSRequest{}
	this.PackageLocation = packageLocation
	this.CarrierAccountId = carrierAccountId
	this.PickupAddress = pickupAddress
	this.PickupOptions = pickupOptions
	return &this
}

// NewSchedulePickupUPSRequestWithDefaults instantiates a new SchedulePickupUPSRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSchedulePickupUPSRequestWithDefaults() *SchedulePickupUPSRequest {
	this := SchedulePickupUPSRequest{}
	return &this
}

// GetPackageLocation returns the PackageLocation field value
func (o *SchedulePickupUPSRequest) GetPackageLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PackageLocation
}

// GetPackageLocationOk returns a tuple with the PackageLocation field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetPackageLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PackageLocation, true
}

// SetPackageLocation sets field value
func (o *SchedulePickupUPSRequest) SetPackageLocation(v string) {
	o.PackageLocation = v
}

// GetCarrierAccountId returns the CarrierAccountId field value
func (o *SchedulePickupUPSRequest) GetCarrierAccountId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CarrierAccountId
}

// GetCarrierAccountIdOk returns a tuple with the CarrierAccountId field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetCarrierAccountIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CarrierAccountId, true
}

// SetCarrierAccountId sets field value
func (o *SchedulePickupUPSRequest) SetCarrierAccountId(v string) {
	o.CarrierAccountId = v
}

// GetPickupAddress returns the PickupAddress field value
func (o *SchedulePickupUPSRequest) GetPickupAddress() SchedulePickupDHLEXPRequestPickupAddress {
	if o == nil {
		var ret SchedulePickupDHLEXPRequestPickupAddress
		return ret
	}

	return o.PickupAddress
}

// GetPickupAddressOk returns a tuple with the PickupAddress field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetPickupAddressOk() (*SchedulePickupDHLEXPRequestPickupAddress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PickupAddress, true
}

// SetPickupAddress sets field value
func (o *SchedulePickupUPSRequest) SetPickupAddress(v SchedulePickupDHLEXPRequestPickupAddress) {
	o.PickupAddress = v
}

// GetShipmentIds returns the ShipmentIds field value if set, zero value otherwise.
func (o *SchedulePickupUPSRequest) GetShipmentIds() []string {
	if o == nil || IsNil(o.ShipmentIds) {
		var ret []string
		return ret
	}
	return o.ShipmentIds
}

// GetShipmentIdsOk returns a tuple with the ShipmentIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetShipmentIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ShipmentIds) {
		return nil, false
	}
	return o.ShipmentIds, true
}

// HasShipmentIds returns a boolean if a field has been set.
func (o *SchedulePickupUPSRequest) HasShipmentIds() bool {
	if o != nil && !IsNil(o.ShipmentIds) {
		return true
	}

	return false
}

// SetShipmentIds gets a reference to the given []string and assigns it to the ShipmentIds field.
func (o *SchedulePickupUPSRequest) SetShipmentIds(v []string) {
	o.ShipmentIds = v
}

// GetPickupSummary returns the PickupSummary field value if set, zero value otherwise.
func (o *SchedulePickupUPSRequest) GetPickupSummary() []SchedulePickupUPSRequestPickupSummaryInner {
	if o == nil || IsNil(o.PickupSummary) {
		var ret []SchedulePickupUPSRequestPickupSummaryInner
		return ret
	}
	return o.PickupSummary
}

// GetPickupSummaryOk returns a tuple with the PickupSummary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetPickupSummaryOk() ([]SchedulePickupUPSRequestPickupSummaryInner, bool) {
	if o == nil || IsNil(o.PickupSummary) {
		return nil, false
	}
	return o.PickupSummary, true
}

// HasPickupSummary returns a boolean if a field has been set.
func (o *SchedulePickupUPSRequest) HasPickupSummary() bool {
	if o != nil && !IsNil(o.PickupSummary) {
		return true
	}

	return false
}

// SetPickupSummary gets a reference to the given []SchedulePickupUPSRequestPickupSummaryInner and assigns it to the PickupSummary field.
func (o *SchedulePickupUPSRequest) SetPickupSummary(v []SchedulePickupUPSRequestPickupSummaryInner) {
	o.PickupSummary = v
}

// GetAdditionalnotes returns the Additionalnotes field value if set, zero value otherwise.
func (o *SchedulePickupUPSRequest) GetAdditionalnotes() string {
	if o == nil || IsNil(o.Additionalnotes) {
		var ret string
		return ret
	}
	return *o.Additionalnotes
}

// GetAdditionalnotesOk returns a tuple with the Additionalnotes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetAdditionalnotesOk() (*string, bool) {
	if o == nil || IsNil(o.Additionalnotes) {
		return nil, false
	}
	return o.Additionalnotes, true
}

// HasAdditionalnotes returns a boolean if a field has been set.
func (o *SchedulePickupUPSRequest) HasAdditionalnotes() bool {
	if o != nil && !IsNil(o.Additionalnotes) {
		return true
	}

	return false
}

// SetAdditionalnotes gets a reference to the given string and assigns it to the Additionalnotes field.
func (o *SchedulePickupUPSRequest) SetAdditionalnotes(v string) {
	o.Additionalnotes = &v
}

// GetReference returns the Reference field value if set, zero value otherwise.
func (o *SchedulePickupUPSRequest) GetReference() string {
	if o == nil || IsNil(o.Reference) {
		var ret string
		return ret
	}
	return *o.Reference
}

// GetReferenceOk returns a tuple with the Reference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetReferenceOk() (*string, bool) {
	if o == nil || IsNil(o.Reference) {
		return nil, false
	}
	return o.Reference, true
}

// HasReference returns a boolean if a field has been set.
func (o *SchedulePickupUPSRequest) HasReference() bool {
	if o != nil && !IsNil(o.Reference) {
		return true
	}

	return false
}

// SetReference gets a reference to the given string and assigns it to the Reference field.
func (o *SchedulePickupUPSRequest) SetReference(v string) {
	o.Reference = &v
}

// GetPickupOptions returns the PickupOptions field value
func (o *SchedulePickupUPSRequest) GetPickupOptions() SchedulePickupUPSRequestPickupOptions {
	if o == nil {
		var ret SchedulePickupUPSRequestPickupOptions
		return ret
	}

	return o.PickupOptions
}

// GetPickupOptionsOk returns a tuple with the PickupOptions field value
// and a boolean to check if the value has been set.
func (o *SchedulePickupUPSRequest) GetPickupOptionsOk() (*SchedulePickupUPSRequestPickupOptions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PickupOptions, true
}

// SetPickupOptions sets field value
func (o *SchedulePickupUPSRequest) SetPickupOptions(v SchedulePickupUPSRequestPickupOptions) {
	o.PickupOptions = v
}

func (o SchedulePickupUPSRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SchedulePickupUPSRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["packageLocation"] = o.PackageLocation
	toSerialize["carrierAccountId"] = o.CarrierAccountId
	toSerialize["pickupAddress"] = o.PickupAddress
	if !IsNil(o.ShipmentIds) {
		toSerialize["shipmentIds"] = o.ShipmentIds
	}
	if !IsNil(o.PickupSummary) {
		toSerialize["pickupSummary"] = o.PickupSummary
	}
	if !IsNil(o.Additionalnotes) {
		toSerialize["additionalnotes"] = o.Additionalnotes
	}
	if !IsNil(o.Reference) {
		toSerialize["reference"] = o.Reference
	}
	toSerialize["pickupOptions"] = o.PickupOptions
	return toSerialize, nil
}

func (o *SchedulePickupUPSRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"packageLocation",
		"carrierAccountId",
		"pickupAddress",
		"pickupOptions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSchedulePickupUPSRequest := _SchedulePickupUPSRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSchedulePickupUPSRequest)

	if err != nil {
		return err
	}

	*o = SchedulePickupUPSRequest(varSchedulePickupUPSRequest)

	return err
}

type NullableSchedulePickupUPSRequest struct {
	value *SchedulePickupUPSRequest
	isSet bool
}

func (v NullableSchedulePickupUPSRequest) Get() *SchedulePickupUPSRequest {
	return v.value
}

func (v *NullableSchedulePickupUPSRequest) Set(val *SchedulePickupUPSRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSchedulePickupUPSRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSchedulePickupUPSRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSchedulePickupUPSRequest(val *SchedulePickupUPSRequest) *NullableSchedulePickupUPSRequest {
	return &NullableSchedulePickupUPSRequest{value: val, isSet: true}
}

func (v NullableSchedulePickupUPSRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSchedulePickupUPSRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


