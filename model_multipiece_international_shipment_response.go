/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the MultipieceInternationalShipmentResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipieceInternationalShipmentResponse{}

// MultipieceInternationalShipmentResponse struct for MultipieceInternationalShipmentResponse
type MultipieceInternationalShipmentResponse struct {
	// description
	CorrelationId *string `json:"correlationId,omitempty"`
	// description
	LabelLayout []MultipieceDomesticShipmentResponseLabelLayoutInner `json:"labelLayout,omitempty"`
	FromAddress *MultipieceDomesticShipmentRequestFromAddress `json:"fromAddress,omitempty"`
	// description
	MultiPieceRates []MultipieceDomesticShipmentResponseMultiPieceRatesInner `json:"multiPieceRates,omitempty"`
	// description
	ParcelTrackingNumber *string `json:"parcelTrackingNumber,omitempty"`
	// description
	ShipmentId *string `json:"shipmentId,omitempty"`
	ShipmentOptions *MultipieceDomesticShipmentRequestShipmentOptions `json:"shipmentOptions,omitempty"`
	ToAddress *MultipieceDomesticShipmentRequestToAddress `json:"toAddress,omitempty"`
	Customs *MultipieceInternationalShipmentResponseCustoms `json:"customs,omitempty"`
}

// NewMultipieceInternationalShipmentResponse instantiates a new MultipieceInternationalShipmentResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipieceInternationalShipmentResponse() *MultipieceInternationalShipmentResponse {
	this := MultipieceInternationalShipmentResponse{}
	return &this
}

// NewMultipieceInternationalShipmentResponseWithDefaults instantiates a new MultipieceInternationalShipmentResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipieceInternationalShipmentResponseWithDefaults() *MultipieceInternationalShipmentResponse {
	this := MultipieceInternationalShipmentResponse{}
	return &this
}

// GetCorrelationId returns the CorrelationId field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetCorrelationId() string {
	if o == nil || IsNil(o.CorrelationId) {
		var ret string
		return ret
	}
	return *o.CorrelationId
}

// GetCorrelationIdOk returns a tuple with the CorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetCorrelationIdOk() (*string, bool) {
	if o == nil || IsNil(o.CorrelationId) {
		return nil, false
	}
	return o.CorrelationId, true
}

// HasCorrelationId returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasCorrelationId() bool {
	if o != nil && !IsNil(o.CorrelationId) {
		return true
	}

	return false
}

// SetCorrelationId gets a reference to the given string and assigns it to the CorrelationId field.
func (o *MultipieceInternationalShipmentResponse) SetCorrelationId(v string) {
	o.CorrelationId = &v
}

// GetLabelLayout returns the LabelLayout field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetLabelLayout() []MultipieceDomesticShipmentResponseLabelLayoutInner {
	if o == nil || IsNil(o.LabelLayout) {
		var ret []MultipieceDomesticShipmentResponseLabelLayoutInner
		return ret
	}
	return o.LabelLayout
}

// GetLabelLayoutOk returns a tuple with the LabelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetLabelLayoutOk() ([]MultipieceDomesticShipmentResponseLabelLayoutInner, bool) {
	if o == nil || IsNil(o.LabelLayout) {
		return nil, false
	}
	return o.LabelLayout, true
}

// HasLabelLayout returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasLabelLayout() bool {
	if o != nil && !IsNil(o.LabelLayout) {
		return true
	}

	return false
}

// SetLabelLayout gets a reference to the given []MultipieceDomesticShipmentResponseLabelLayoutInner and assigns it to the LabelLayout field.
func (o *MultipieceInternationalShipmentResponse) SetLabelLayout(v []MultipieceDomesticShipmentResponseLabelLayoutInner) {
	o.LabelLayout = v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetFromAddress() MultipieceDomesticShipmentRequestFromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret MultipieceDomesticShipmentRequestFromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetFromAddressOk() (*MultipieceDomesticShipmentRequestFromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given MultipieceDomesticShipmentRequestFromAddress and assigns it to the FromAddress field.
func (o *MultipieceInternationalShipmentResponse) SetFromAddress(v MultipieceDomesticShipmentRequestFromAddress) {
	o.FromAddress = &v
}

// GetMultiPieceRates returns the MultiPieceRates field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetMultiPieceRates() []MultipieceDomesticShipmentResponseMultiPieceRatesInner {
	if o == nil || IsNil(o.MultiPieceRates) {
		var ret []MultipieceDomesticShipmentResponseMultiPieceRatesInner
		return ret
	}
	return o.MultiPieceRates
}

// GetMultiPieceRatesOk returns a tuple with the MultiPieceRates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetMultiPieceRatesOk() ([]MultipieceDomesticShipmentResponseMultiPieceRatesInner, bool) {
	if o == nil || IsNil(o.MultiPieceRates) {
		return nil, false
	}
	return o.MultiPieceRates, true
}

// HasMultiPieceRates returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasMultiPieceRates() bool {
	if o != nil && !IsNil(o.MultiPieceRates) {
		return true
	}

	return false
}

// SetMultiPieceRates gets a reference to the given []MultipieceDomesticShipmentResponseMultiPieceRatesInner and assigns it to the MultiPieceRates field.
func (o *MultipieceInternationalShipmentResponse) SetMultiPieceRates(v []MultipieceDomesticShipmentResponseMultiPieceRatesInner) {
	o.MultiPieceRates = v
}

// GetParcelTrackingNumber returns the ParcelTrackingNumber field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetParcelTrackingNumber() string {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		var ret string
		return ret
	}
	return *o.ParcelTrackingNumber
}

// GetParcelTrackingNumberOk returns a tuple with the ParcelTrackingNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetParcelTrackingNumberOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelTrackingNumber) {
		return nil, false
	}
	return o.ParcelTrackingNumber, true
}

// HasParcelTrackingNumber returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasParcelTrackingNumber() bool {
	if o != nil && !IsNil(o.ParcelTrackingNumber) {
		return true
	}

	return false
}

// SetParcelTrackingNumber gets a reference to the given string and assigns it to the ParcelTrackingNumber field.
func (o *MultipieceInternationalShipmentResponse) SetParcelTrackingNumber(v string) {
	o.ParcelTrackingNumber = &v
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *MultipieceInternationalShipmentResponse) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetShipmentOptions() MultipieceDomesticShipmentRequestShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret MultipieceDomesticShipmentRequestShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetShipmentOptionsOk() (*MultipieceDomesticShipmentRequestShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given MultipieceDomesticShipmentRequestShipmentOptions and assigns it to the ShipmentOptions field.
func (o *MultipieceInternationalShipmentResponse) SetShipmentOptions(v MultipieceDomesticShipmentRequestShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetToAddress() MultipieceDomesticShipmentRequestToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret MultipieceDomesticShipmentRequestToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetToAddressOk() (*MultipieceDomesticShipmentRequestToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given MultipieceDomesticShipmentRequestToAddress and assigns it to the ToAddress field.
func (o *MultipieceInternationalShipmentResponse) SetToAddress(v MultipieceDomesticShipmentRequestToAddress) {
	o.ToAddress = &v
}

// GetCustoms returns the Customs field value if set, zero value otherwise.
func (o *MultipieceInternationalShipmentResponse) GetCustoms() MultipieceInternationalShipmentResponseCustoms {
	if o == nil || IsNil(o.Customs) {
		var ret MultipieceInternationalShipmentResponseCustoms
		return ret
	}
	return *o.Customs
}

// GetCustomsOk returns a tuple with the Customs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipieceInternationalShipmentResponse) GetCustomsOk() (*MultipieceInternationalShipmentResponseCustoms, bool) {
	if o == nil || IsNil(o.Customs) {
		return nil, false
	}
	return o.Customs, true
}

// HasCustoms returns a boolean if a field has been set.
func (o *MultipieceInternationalShipmentResponse) HasCustoms() bool {
	if o != nil && !IsNil(o.Customs) {
		return true
	}

	return false
}

// SetCustoms gets a reference to the given MultipieceInternationalShipmentResponseCustoms and assigns it to the Customs field.
func (o *MultipieceInternationalShipmentResponse) SetCustoms(v MultipieceInternationalShipmentResponseCustoms) {
	o.Customs = &v
}

func (o MultipieceInternationalShipmentResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipieceInternationalShipmentResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorrelationId) {
		toSerialize["correlationId"] = o.CorrelationId
	}
	if !IsNil(o.LabelLayout) {
		toSerialize["labelLayout"] = o.LabelLayout
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.MultiPieceRates) {
		toSerialize["multiPieceRates"] = o.MultiPieceRates
	}
	if !IsNil(o.ParcelTrackingNumber) {
		toSerialize["parcelTrackingNumber"] = o.ParcelTrackingNumber
	}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	if !IsNil(o.Customs) {
		toSerialize["customs"] = o.Customs
	}
	return toSerialize, nil
}

type NullableMultipieceInternationalShipmentResponse struct {
	value *MultipieceInternationalShipmentResponse
	isSet bool
}

func (v NullableMultipieceInternationalShipmentResponse) Get() *MultipieceInternationalShipmentResponse {
	return v.value
}

func (v *NullableMultipieceInternationalShipmentResponse) Set(val *MultipieceInternationalShipmentResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipieceInternationalShipmentResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipieceInternationalShipmentResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipieceInternationalShipmentResponse(val *MultipieceInternationalShipmentResponse) *NullableMultipieceInternationalShipmentResponse {
	return &NullableMultipieceInternationalShipmentResponse{value: val, isSet: true}
}

func (v NullableMultipieceInternationalShipmentResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipieceInternationalShipmentResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


