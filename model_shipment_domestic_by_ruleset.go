/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ShipmentDomesticByRuleset type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ShipmentDomesticByRuleset{}

// ShipmentDomesticByRuleset struct for ShipmentDomesticByRuleset
type ShipmentDomesticByRuleset struct {
	FromAddress FromAddressV2 `json:"fromAddress"`
	ToAddress ToAddressV2 `json:"toAddress"`
	Parcel *ParcelV2 `json:"parcel,omitempty"`
	// Parcel Type is required for creating a shipment while rating a parcel, which varies as per Carrier selection.<br /> ParcelType can have categories like Package, Envelopes, Paks, Boxes, Tube, etc. <br /> `Max length = 30` 
	ParcelType *string `json:"parcelType,omitempty"`
	// RateShop, which is attached to an Enterprise or Location, is done through three approaches: by Carrier, by RateGroup, and by Ruleset. <br />  Through Carrier, customers can choose the carriers as per requirement, based on which services, parcel types, and special services can be selected, and RateShop is done. <br /> Through RateGroup, customers can select the RateGroup, which has been divided into two categories: Cheapest (w.r.t. price) and Fastest (w.r.t. delivery hours). <br /> Through Ruleset, customers can define the Condition/rule for selecting carriers and their services, so they do not need to worry for Rate Shopping every time they create Shipment. For example, For a particular location, they can set one definite carrier, or apply RateGroup - Cheapest/Fastest. Similarly, for a particular amount like below $1000 Dollars, they can select a definite carrier service, based on RateGroup.
	RateShopBy *string `json:"rateShopBy,omitempty"`
	ByRuleSet *ShipmentDomesticByRulesetByRuleSet `json:"byRuleSet,omitempty"`
	ShipmentOptions *ShipmentDomesticByRulesetShipmentOptions `json:"shipmentOptions,omitempty"`
	DocTab *ShipmentDomesticByCarrierDocTab `json:"docTab,omitempty"`
	// Indicates the supporting special service or document as an evidence of shipment delivery.  For the delivery confirmation, user can select any of the following special services, but they may vary as per the carrier selection. <br />   - Signature Required/ Indirect Signature Required : SIG   - Signed Hard Copy: SIGHC   - Delivery confirmation: DEL_CON   - Proof of age required (18 years) Adult Signature Required: ADULT_SIG   - Proof of age required (19 years): ADULT_SIG_19   - No Signature Required: NO_SIG   - Direct Signature Required: DIRECT_SIG   - Chain of Signature: COS       Carrier specific options:   - UPS supports *SIG and ADULT_SIG*.    - FedEx supports *SIG, ADULT_SIG, NO_SIG, and DIRECT_SIG*.   - Purolator supports *ADULT_SIG, NO_SIG, and COS*.   - GoFor supports *SIG*.   - CPC supports *SIG, SIGHC, DEL_CON, ADULT_SIG, ADULT_SIG_19, and NO_SIG*.     
	DeliveryConfirmation *string `json:"deliveryConfirmation,omitempty"`
	// Few shipments need a special handling, and the reason can be fragile items or highly secured shipments. There might be other case scenarios. In a simple term, this field defines shipment handling, which provides users a capability to select handling options. <br /> User can select any of the following handling options (special services), but they may vary as per the carrier selection.   - Hold For Pickup: HOLD   - Saturday Delivery: SAT_DELIVERY   - UPS Premium Care: PREM_CARE   - Direct Delivery Only: DIRECT   - Additional Handling: ADD_HDL       Carrier specific options:   - UPS supports all handling options mentioned above.    - FedEx supports *HOLD, SAT_DELIVERY, and ADD_HDL*.   - Purolator supports *HOLD, SAT_DELIVERY, and ADD_HDL*.    
	Handling *string `json:"handling,omitempty"`
	// Indicates the insurance coverage, which is selected by users while create shipment - rate shopping. User can select below-mentioned special service for insurance:    - Declared Value Surcharge: INS      Carrier specific options:   - UPS, FedEx, Purolator, and CPC support special service *INS*.    
	Insurance *string `json:"insurance,omitempty"`
	References *ReferenceV2 `json:"references,omitempty"`
	// Additional metadata that needs to be stored for this shipment can be added here.<br /> For now, 'Cost Account Name' is supported.
	Metadata []ShipmentDomesticByRulesetMetadataInner `json:"metadata,omitempty"`
	// Defines the label size of the Shipment, that is, the Shipping Label is available in different Doc Size. <br /> `Max length = 10`
	LabelSize string `json:"labelSize"`
	// Defines the type of the Shipment. <br /> `Max length = 14`
	LabelType string `json:"labelType"`
	// Defines the file/format in which the label is printed. <br /> `Max length = 14`
	LabelFormat string `json:"labelFormat"`
	// Refers to a printer connected (directly or via network) to a computer. `Max length = 60`
	PrinterAliasName *string `json:"printerAliasName,omitempty"`
	// The date when shipment is created/shipped. The format of the Date is YYYY-MM-DD.
	DateOfShipment *string `json:"dateOfShipment,omitempty"`
	DeliveryOption *ShipmentDomesticByRulesetDeliveryOption `json:"deliveryOption,omitempty"`
}

type _ShipmentDomesticByRuleset ShipmentDomesticByRuleset

// NewShipmentDomesticByRuleset instantiates a new ShipmentDomesticByRuleset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewShipmentDomesticByRuleset(fromAddress FromAddressV2, toAddress ToAddressV2, labelSize string, labelType string, labelFormat string) *ShipmentDomesticByRuleset {
	this := ShipmentDomesticByRuleset{}
	this.FromAddress = fromAddress
	this.ToAddress = toAddress
	this.LabelSize = labelSize
	this.LabelType = labelType
	this.LabelFormat = labelFormat
	return &this
}

// NewShipmentDomesticByRulesetWithDefaults instantiates a new ShipmentDomesticByRuleset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewShipmentDomesticByRulesetWithDefaults() *ShipmentDomesticByRuleset {
	this := ShipmentDomesticByRuleset{}
	return &this
}

// GetFromAddress returns the FromAddress field value
func (o *ShipmentDomesticByRuleset) GetFromAddress() FromAddressV2 {
	if o == nil {
		var ret FromAddressV2
		return ret
	}

	return o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetFromAddressOk() (*FromAddressV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromAddress, true
}

// SetFromAddress sets field value
func (o *ShipmentDomesticByRuleset) SetFromAddress(v FromAddressV2) {
	o.FromAddress = v
}

// GetToAddress returns the ToAddress field value
func (o *ShipmentDomesticByRuleset) GetToAddress() ToAddressV2 {
	if o == nil {
		var ret ToAddressV2
		return ret
	}

	return o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetToAddressOk() (*ToAddressV2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ToAddress, true
}

// SetToAddress sets field value
func (o *ShipmentDomesticByRuleset) SetToAddress(v ToAddressV2) {
	o.ToAddress = v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetParcel() ParcelV2 {
	if o == nil || IsNil(o.Parcel) {
		var ret ParcelV2
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetParcelOk() (*ParcelV2, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given ParcelV2 and assigns it to the Parcel field.
func (o *ShipmentDomesticByRuleset) SetParcel(v ParcelV2) {
	o.Parcel = &v
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *ShipmentDomesticByRuleset) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetRateShopBy returns the RateShopBy field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetRateShopBy() string {
	if o == nil || IsNil(o.RateShopBy) {
		var ret string
		return ret
	}
	return *o.RateShopBy
}

// GetRateShopByOk returns a tuple with the RateShopBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetRateShopByOk() (*string, bool) {
	if o == nil || IsNil(o.RateShopBy) {
		return nil, false
	}
	return o.RateShopBy, true
}

// HasRateShopBy returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasRateShopBy() bool {
	if o != nil && !IsNil(o.RateShopBy) {
		return true
	}

	return false
}

// SetRateShopBy gets a reference to the given string and assigns it to the RateShopBy field.
func (o *ShipmentDomesticByRuleset) SetRateShopBy(v string) {
	o.RateShopBy = &v
}

// GetByRuleSet returns the ByRuleSet field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetByRuleSet() ShipmentDomesticByRulesetByRuleSet {
	if o == nil || IsNil(o.ByRuleSet) {
		var ret ShipmentDomesticByRulesetByRuleSet
		return ret
	}
	return *o.ByRuleSet
}

// GetByRuleSetOk returns a tuple with the ByRuleSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetByRuleSetOk() (*ShipmentDomesticByRulesetByRuleSet, bool) {
	if o == nil || IsNil(o.ByRuleSet) {
		return nil, false
	}
	return o.ByRuleSet, true
}

// HasByRuleSet returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasByRuleSet() bool {
	if o != nil && !IsNil(o.ByRuleSet) {
		return true
	}

	return false
}

// SetByRuleSet gets a reference to the given ShipmentDomesticByRulesetByRuleSet and assigns it to the ByRuleSet field.
func (o *ShipmentDomesticByRuleset) SetByRuleSet(v ShipmentDomesticByRulesetByRuleSet) {
	o.ByRuleSet = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetShipmentOptions() ShipmentDomesticByRulesetShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret ShipmentDomesticByRulesetShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetShipmentOptionsOk() (*ShipmentDomesticByRulesetShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given ShipmentDomesticByRulesetShipmentOptions and assigns it to the ShipmentOptions field.
func (o *ShipmentDomesticByRuleset) SetShipmentOptions(v ShipmentDomesticByRulesetShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetDocTab returns the DocTab field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetDocTab() ShipmentDomesticByCarrierDocTab {
	if o == nil || IsNil(o.DocTab) {
		var ret ShipmentDomesticByCarrierDocTab
		return ret
	}
	return *o.DocTab
}

// GetDocTabOk returns a tuple with the DocTab field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetDocTabOk() (*ShipmentDomesticByCarrierDocTab, bool) {
	if o == nil || IsNil(o.DocTab) {
		return nil, false
	}
	return o.DocTab, true
}

// HasDocTab returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasDocTab() bool {
	if o != nil && !IsNil(o.DocTab) {
		return true
	}

	return false
}

// SetDocTab gets a reference to the given ShipmentDomesticByCarrierDocTab and assigns it to the DocTab field.
func (o *ShipmentDomesticByRuleset) SetDocTab(v ShipmentDomesticByCarrierDocTab) {
	o.DocTab = &v
}

// GetDeliveryConfirmation returns the DeliveryConfirmation field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetDeliveryConfirmation() string {
	if o == nil || IsNil(o.DeliveryConfirmation) {
		var ret string
		return ret
	}
	return *o.DeliveryConfirmation
}

// GetDeliveryConfirmationOk returns a tuple with the DeliveryConfirmation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetDeliveryConfirmationOk() (*string, bool) {
	if o == nil || IsNil(o.DeliveryConfirmation) {
		return nil, false
	}
	return o.DeliveryConfirmation, true
}

// HasDeliveryConfirmation returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasDeliveryConfirmation() bool {
	if o != nil && !IsNil(o.DeliveryConfirmation) {
		return true
	}

	return false
}

// SetDeliveryConfirmation gets a reference to the given string and assigns it to the DeliveryConfirmation field.
func (o *ShipmentDomesticByRuleset) SetDeliveryConfirmation(v string) {
	o.DeliveryConfirmation = &v
}

// GetHandling returns the Handling field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetHandling() string {
	if o == nil || IsNil(o.Handling) {
		var ret string
		return ret
	}
	return *o.Handling
}

// GetHandlingOk returns a tuple with the Handling field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetHandlingOk() (*string, bool) {
	if o == nil || IsNil(o.Handling) {
		return nil, false
	}
	return o.Handling, true
}

// HasHandling returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasHandling() bool {
	if o != nil && !IsNil(o.Handling) {
		return true
	}

	return false
}

// SetHandling gets a reference to the given string and assigns it to the Handling field.
func (o *ShipmentDomesticByRuleset) SetHandling(v string) {
	o.Handling = &v
}

// GetInsurance returns the Insurance field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetInsurance() string {
	if o == nil || IsNil(o.Insurance) {
		var ret string
		return ret
	}
	return *o.Insurance
}

// GetInsuranceOk returns a tuple with the Insurance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetInsuranceOk() (*string, bool) {
	if o == nil || IsNil(o.Insurance) {
		return nil, false
	}
	return o.Insurance, true
}

// HasInsurance returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasInsurance() bool {
	if o != nil && !IsNil(o.Insurance) {
		return true
	}

	return false
}

// SetInsurance gets a reference to the given string and assigns it to the Insurance field.
func (o *ShipmentDomesticByRuleset) SetInsurance(v string) {
	o.Insurance = &v
}

// GetReferences returns the References field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetReferences() ReferenceV2 {
	if o == nil || IsNil(o.References) {
		var ret ReferenceV2
		return ret
	}
	return *o.References
}

// GetReferencesOk returns a tuple with the References field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetReferencesOk() (*ReferenceV2, bool) {
	if o == nil || IsNil(o.References) {
		return nil, false
	}
	return o.References, true
}

// HasReferences returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasReferences() bool {
	if o != nil && !IsNil(o.References) {
		return true
	}

	return false
}

// SetReferences gets a reference to the given ReferenceV2 and assigns it to the References field.
func (o *ShipmentDomesticByRuleset) SetReferences(v ReferenceV2) {
	o.References = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetMetadata() []ShipmentDomesticByRulesetMetadataInner {
	if o == nil || IsNil(o.Metadata) {
		var ret []ShipmentDomesticByRulesetMetadataInner
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetMetadataOk() ([]ShipmentDomesticByRulesetMetadataInner, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []ShipmentDomesticByRulesetMetadataInner and assigns it to the Metadata field.
func (o *ShipmentDomesticByRuleset) SetMetadata(v []ShipmentDomesticByRulesetMetadataInner) {
	o.Metadata = v
}

// GetLabelSize returns the LabelSize field value
func (o *ShipmentDomesticByRuleset) GetLabelSize() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelSize
}

// GetLabelSizeOk returns a tuple with the LabelSize field value
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetLabelSizeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelSize, true
}

// SetLabelSize sets field value
func (o *ShipmentDomesticByRuleset) SetLabelSize(v string) {
	o.LabelSize = v
}

// GetLabelType returns the LabelType field value
func (o *ShipmentDomesticByRuleset) GetLabelType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelType
}

// GetLabelTypeOk returns a tuple with the LabelType field value
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetLabelTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelType, true
}

// SetLabelType sets field value
func (o *ShipmentDomesticByRuleset) SetLabelType(v string) {
	o.LabelType = v
}

// GetLabelFormat returns the LabelFormat field value
func (o *ShipmentDomesticByRuleset) GetLabelFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LabelFormat
}

// GetLabelFormatOk returns a tuple with the LabelFormat field value
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetLabelFormatOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LabelFormat, true
}

// SetLabelFormat sets field value
func (o *ShipmentDomesticByRuleset) SetLabelFormat(v string) {
	o.LabelFormat = v
}

// GetPrinterAliasName returns the PrinterAliasName field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetPrinterAliasName() string {
	if o == nil || IsNil(o.PrinterAliasName) {
		var ret string
		return ret
	}
	return *o.PrinterAliasName
}

// GetPrinterAliasNameOk returns a tuple with the PrinterAliasName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetPrinterAliasNameOk() (*string, bool) {
	if o == nil || IsNil(o.PrinterAliasName) {
		return nil, false
	}
	return o.PrinterAliasName, true
}

// HasPrinterAliasName returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasPrinterAliasName() bool {
	if o != nil && !IsNil(o.PrinterAliasName) {
		return true
	}

	return false
}

// SetPrinterAliasName gets a reference to the given string and assigns it to the PrinterAliasName field.
func (o *ShipmentDomesticByRuleset) SetPrinterAliasName(v string) {
	o.PrinterAliasName = &v
}

// GetDateOfShipment returns the DateOfShipment field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetDateOfShipment() string {
	if o == nil || IsNil(o.DateOfShipment) {
		var ret string
		return ret
	}
	return *o.DateOfShipment
}

// GetDateOfShipmentOk returns a tuple with the DateOfShipment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetDateOfShipmentOk() (*string, bool) {
	if o == nil || IsNil(o.DateOfShipment) {
		return nil, false
	}
	return o.DateOfShipment, true
}

// HasDateOfShipment returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasDateOfShipment() bool {
	if o != nil && !IsNil(o.DateOfShipment) {
		return true
	}

	return false
}

// SetDateOfShipment gets a reference to the given string and assigns it to the DateOfShipment field.
func (o *ShipmentDomesticByRuleset) SetDateOfShipment(v string) {
	o.DateOfShipment = &v
}

// GetDeliveryOption returns the DeliveryOption field value if set, zero value otherwise.
func (o *ShipmentDomesticByRuleset) GetDeliveryOption() ShipmentDomesticByRulesetDeliveryOption {
	if o == nil || IsNil(o.DeliveryOption) {
		var ret ShipmentDomesticByRulesetDeliveryOption
		return ret
	}
	return *o.DeliveryOption
}

// GetDeliveryOptionOk returns a tuple with the DeliveryOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ShipmentDomesticByRuleset) GetDeliveryOptionOk() (*ShipmentDomesticByRulesetDeliveryOption, bool) {
	if o == nil || IsNil(o.DeliveryOption) {
		return nil, false
	}
	return o.DeliveryOption, true
}

// HasDeliveryOption returns a boolean if a field has been set.
func (o *ShipmentDomesticByRuleset) HasDeliveryOption() bool {
	if o != nil && !IsNil(o.DeliveryOption) {
		return true
	}

	return false
}

// SetDeliveryOption gets a reference to the given ShipmentDomesticByRulesetDeliveryOption and assigns it to the DeliveryOption field.
func (o *ShipmentDomesticByRuleset) SetDeliveryOption(v ShipmentDomesticByRulesetDeliveryOption) {
	o.DeliveryOption = &v
}

func (o ShipmentDomesticByRuleset) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ShipmentDomesticByRuleset) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fromAddress"] = o.FromAddress
	toSerialize["toAddress"] = o.ToAddress
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.RateShopBy) {
		toSerialize["rateShopBy"] = o.RateShopBy
	}
	if !IsNil(o.ByRuleSet) {
		toSerialize["byRuleSet"] = o.ByRuleSet
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.DocTab) {
		toSerialize["docTab"] = o.DocTab
	}
	if !IsNil(o.DeliveryConfirmation) {
		toSerialize["deliveryConfirmation"] = o.DeliveryConfirmation
	}
	if !IsNil(o.Handling) {
		toSerialize["handling"] = o.Handling
	}
	if !IsNil(o.Insurance) {
		toSerialize["insurance"] = o.Insurance
	}
	if !IsNil(o.References) {
		toSerialize["references"] = o.References
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["labelSize"] = o.LabelSize
	toSerialize["labelType"] = o.LabelType
	toSerialize["labelFormat"] = o.LabelFormat
	if !IsNil(o.PrinterAliasName) {
		toSerialize["printerAliasName"] = o.PrinterAliasName
	}
	if !IsNil(o.DateOfShipment) {
		toSerialize["dateOfShipment"] = o.DateOfShipment
	}
	if !IsNil(o.DeliveryOption) {
		toSerialize["deliveryOption"] = o.DeliveryOption
	}
	return toSerialize, nil
}

func (o *ShipmentDomesticByRuleset) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fromAddress",
		"toAddress",
		"labelSize",
		"labelType",
		"labelFormat",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varShipmentDomesticByRuleset := _ShipmentDomesticByRuleset{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varShipmentDomesticByRuleset)

	if err != nil {
		return err
	}

	*o = ShipmentDomesticByRuleset(varShipmentDomesticByRuleset)

	return err
}

type NullableShipmentDomesticByRuleset struct {
	value *ShipmentDomesticByRuleset
	isSet bool
}

func (v NullableShipmentDomesticByRuleset) Get() *ShipmentDomesticByRuleset {
	return v.value
}

func (v *NullableShipmentDomesticByRuleset) Set(val *ShipmentDomesticByRuleset) {
	v.value = val
	v.isSet = true
}

func (v NullableShipmentDomesticByRuleset) IsSet() bool {
	return v.isSet
}

func (v *NullableShipmentDomesticByRuleset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableShipmentDomesticByRuleset(val *ShipmentDomesticByRuleset) *NullableShipmentDomesticByRuleset {
	return &NullableShipmentDomesticByRuleset{value: val, isSet: true}
}

func (v NullableShipmentDomesticByRuleset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableShipmentDomesticByRuleset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


