/*
Shipping APIs

### Introduction  The Shipping APIs include a variety of operations that allow users to manage and track their shipping requests.   Some of the key API operations available in the Shipping API includes: ### Shipment API  | Operation      | Description | | ----------- | ----------- |  | Get Carriers    | This operation fetches all onboarded carriers. Typically, user will use this service to get list of onboarded carriers and supported properties for those carriers.  |  | Get Countries | This operation fetches list of supported destination countries for a provided carrier and origin country.  |  | Get Services | This operation fetches a list of supported services for a carrier with respect to specific origin and destination country. |  | Get ParcelTypes| This operation fetches ParcelTypes based on carrier, origin and destination country. |  | Get Special Services| This operation fetches Special Services for a given carrier, service, origin and destination country. |  | Get Carrier Accounts| This operation retrieves onboarded Carriers with their Carrier Account Ids which uniquely identify multiple accounts of same carrier.  |  | Rate Shop and Get Single Rate| This API contains 2 operations, rate shop and single rate. Rate shop will fetch rates for all carrier services based on the given addresses (From and To), weight, and dimension for given parcelType. Single rate will get rate for specific service and special service (if requested) based on the given addresses (From and To), weight, and dimension, parcelType and serviceId with or without specialServices. Single rate will be used mainly to a rate a shipment before creating shipment.  |  | Create Shipment| This operation creates a new Shipment or Shipment Label. This is for both Domestic and International. | | Get All Shipments| This operation fetches all created Shipments. |  | Get Shipment by Id| Retrieves single shipment using Shipment Id. |  | Reprint Shipment| This operation reprints Shipment by the shipmentId. It retrieves an existing shipping label to reprint. The API sends the shipmentId returned by the original Created Shipment request. Use this only if the shipping label in the Create Shipment response was spoilt or lost. |  | Cancel Shipment| This operation cancels previously created shipment. |  

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package shipping

import (
	"encoding/json"
)

// checks if the GetShipmentsForBatchDataInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetShipmentsForBatchDataInner{}

// GetShipmentsForBatchDataInner struct for GetShipmentsForBatchDataInner
type GetShipmentsForBatchDataInner struct {
	// This is a system-generated unique identifier assigned to the Batch while it is processed.
	BatchId *string `json:"batchId,omitempty"`
	// A unique identifier associated with the Carrier account used by client users during shipment process.
	CarrierAccountId *string `json:"carrierAccountId,omitempty"`
	// This is a user-defined value provided by users just for their reference. This is for mapping purpose against each shipment.
	ExternalId *string `json:"externalId,omitempty"`
	FromAddress *FromAddress `json:"fromAddress,omitempty"`
	LabelLayout *GetShipmentsForBatchDataInnerLabelLayout `json:"labelLayout,omitempty"`
	// Additional metadata that needs to be stored for this shipment can be added here. For now, `costAccountName` is supported.
	Metadata []GetShipmentsForBatchDataInnerMetadataInner `json:"metadata,omitempty"`
	Parcel *Parcel `json:"parcel,omitempty"`
	// Parcel Type is required for creating a shipment while rating a parcel. And it varies as per carrier selection and corresponding services.
	ParcelType *string `json:"parcelType,omitempty"`
	// A unique identifier given to the carrier-specific service. User can override this value by defining it at Shipment level.
	ServiceId *string `json:"serviceId,omitempty"`
	// Shipment ID is a unique identifier for an individual shipment
	ShipmentId *string `json:"shipmentId,omitempty"`
	// Unique identifier generated for each shipment, it can be either success or failed.
	ShipmentIdentifier *string `json:"shipmentIdentifier,omitempty"`
	ShipmentOptions *ShipmentOptions `json:"shipmentOptions,omitempty"`
	// Special services used to create shipment
	SpecialServices []GetShipmentsForBatchDataInnerSpecialServicesInner `json:"specialServices,omitempty"`
	StepStatus *GetShipmentsForBatchDataInnerStepStatus `json:"stepStatus,omitempty"`
	ToAddress *ToAddress `json:"toAddress,omitempty"`
}

// NewGetShipmentsForBatchDataInner instantiates a new GetShipmentsForBatchDataInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetShipmentsForBatchDataInner() *GetShipmentsForBatchDataInner {
	this := GetShipmentsForBatchDataInner{}
	return &this
}

// NewGetShipmentsForBatchDataInnerWithDefaults instantiates a new GetShipmentsForBatchDataInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetShipmentsForBatchDataInnerWithDefaults() *GetShipmentsForBatchDataInner {
	this := GetShipmentsForBatchDataInner{}
	return &this
}

// GetBatchId returns the BatchId field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetBatchId() string {
	if o == nil || IsNil(o.BatchId) {
		var ret string
		return ret
	}
	return *o.BatchId
}

// GetBatchIdOk returns a tuple with the BatchId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetBatchIdOk() (*string, bool) {
	if o == nil || IsNil(o.BatchId) {
		return nil, false
	}
	return o.BatchId, true
}

// HasBatchId returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasBatchId() bool {
	if o != nil && !IsNil(o.BatchId) {
		return true
	}

	return false
}

// SetBatchId gets a reference to the given string and assigns it to the BatchId field.
func (o *GetShipmentsForBatchDataInner) SetBatchId(v string) {
	o.BatchId = &v
}

// GetCarrierAccountId returns the CarrierAccountId field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetCarrierAccountId() string {
	if o == nil || IsNil(o.CarrierAccountId) {
		var ret string
		return ret
	}
	return *o.CarrierAccountId
}

// GetCarrierAccountIdOk returns a tuple with the CarrierAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetCarrierAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.CarrierAccountId) {
		return nil, false
	}
	return o.CarrierAccountId, true
}

// HasCarrierAccountId returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasCarrierAccountId() bool {
	if o != nil && !IsNil(o.CarrierAccountId) {
		return true
	}

	return false
}

// SetCarrierAccountId gets a reference to the given string and assigns it to the CarrierAccountId field.
func (o *GetShipmentsForBatchDataInner) SetCarrierAccountId(v string) {
	o.CarrierAccountId = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *GetShipmentsForBatchDataInner) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetFromAddress returns the FromAddress field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetFromAddress() FromAddress {
	if o == nil || IsNil(o.FromAddress) {
		var ret FromAddress
		return ret
	}
	return *o.FromAddress
}

// GetFromAddressOk returns a tuple with the FromAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetFromAddressOk() (*FromAddress, bool) {
	if o == nil || IsNil(o.FromAddress) {
		return nil, false
	}
	return o.FromAddress, true
}

// HasFromAddress returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasFromAddress() bool {
	if o != nil && !IsNil(o.FromAddress) {
		return true
	}

	return false
}

// SetFromAddress gets a reference to the given FromAddress and assigns it to the FromAddress field.
func (o *GetShipmentsForBatchDataInner) SetFromAddress(v FromAddress) {
	o.FromAddress = &v
}

// GetLabelLayout returns the LabelLayout field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetLabelLayout() GetShipmentsForBatchDataInnerLabelLayout {
	if o == nil || IsNil(o.LabelLayout) {
		var ret GetShipmentsForBatchDataInnerLabelLayout
		return ret
	}
	return *o.LabelLayout
}

// GetLabelLayoutOk returns a tuple with the LabelLayout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetLabelLayoutOk() (*GetShipmentsForBatchDataInnerLabelLayout, bool) {
	if o == nil || IsNil(o.LabelLayout) {
		return nil, false
	}
	return o.LabelLayout, true
}

// HasLabelLayout returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasLabelLayout() bool {
	if o != nil && !IsNil(o.LabelLayout) {
		return true
	}

	return false
}

// SetLabelLayout gets a reference to the given GetShipmentsForBatchDataInnerLabelLayout and assigns it to the LabelLayout field.
func (o *GetShipmentsForBatchDataInner) SetLabelLayout(v GetShipmentsForBatchDataInnerLabelLayout) {
	o.LabelLayout = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetMetadata() []GetShipmentsForBatchDataInnerMetadataInner {
	if o == nil || IsNil(o.Metadata) {
		var ret []GetShipmentsForBatchDataInnerMetadataInner
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetMetadataOk() ([]GetShipmentsForBatchDataInnerMetadataInner, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given []GetShipmentsForBatchDataInnerMetadataInner and assigns it to the Metadata field.
func (o *GetShipmentsForBatchDataInner) SetMetadata(v []GetShipmentsForBatchDataInnerMetadataInner) {
	o.Metadata = v
}

// GetParcel returns the Parcel field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetParcel() Parcel {
	if o == nil || IsNil(o.Parcel) {
		var ret Parcel
		return ret
	}
	return *o.Parcel
}

// GetParcelOk returns a tuple with the Parcel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetParcelOk() (*Parcel, bool) {
	if o == nil || IsNil(o.Parcel) {
		return nil, false
	}
	return o.Parcel, true
}

// HasParcel returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasParcel() bool {
	if o != nil && !IsNil(o.Parcel) {
		return true
	}

	return false
}

// SetParcel gets a reference to the given Parcel and assigns it to the Parcel field.
func (o *GetShipmentsForBatchDataInner) SetParcel(v Parcel) {
	o.Parcel = &v
}

// GetParcelType returns the ParcelType field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetParcelType() string {
	if o == nil || IsNil(o.ParcelType) {
		var ret string
		return ret
	}
	return *o.ParcelType
}

// GetParcelTypeOk returns a tuple with the ParcelType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetParcelTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ParcelType) {
		return nil, false
	}
	return o.ParcelType, true
}

// HasParcelType returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasParcelType() bool {
	if o != nil && !IsNil(o.ParcelType) {
		return true
	}

	return false
}

// SetParcelType gets a reference to the given string and assigns it to the ParcelType field.
func (o *GetShipmentsForBatchDataInner) SetParcelType(v string) {
	o.ParcelType = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetServiceId() string {
	if o == nil || IsNil(o.ServiceId) {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *GetShipmentsForBatchDataInner) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetShipmentId returns the ShipmentId field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetShipmentId() string {
	if o == nil || IsNil(o.ShipmentId) {
		var ret string
		return ret
	}
	return *o.ShipmentId
}

// GetShipmentIdOk returns a tuple with the ShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentId) {
		return nil, false
	}
	return o.ShipmentId, true
}

// HasShipmentId returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasShipmentId() bool {
	if o != nil && !IsNil(o.ShipmentId) {
		return true
	}

	return false
}

// SetShipmentId gets a reference to the given string and assigns it to the ShipmentId field.
func (o *GetShipmentsForBatchDataInner) SetShipmentId(v string) {
	o.ShipmentId = &v
}

// GetShipmentIdentifier returns the ShipmentIdentifier field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetShipmentIdentifier() string {
	if o == nil || IsNil(o.ShipmentIdentifier) {
		var ret string
		return ret
	}
	return *o.ShipmentIdentifier
}

// GetShipmentIdentifierOk returns a tuple with the ShipmentIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetShipmentIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.ShipmentIdentifier) {
		return nil, false
	}
	return o.ShipmentIdentifier, true
}

// HasShipmentIdentifier returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasShipmentIdentifier() bool {
	if o != nil && !IsNil(o.ShipmentIdentifier) {
		return true
	}

	return false
}

// SetShipmentIdentifier gets a reference to the given string and assigns it to the ShipmentIdentifier field.
func (o *GetShipmentsForBatchDataInner) SetShipmentIdentifier(v string) {
	o.ShipmentIdentifier = &v
}

// GetShipmentOptions returns the ShipmentOptions field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetShipmentOptions() ShipmentOptions {
	if o == nil || IsNil(o.ShipmentOptions) {
		var ret ShipmentOptions
		return ret
	}
	return *o.ShipmentOptions
}

// GetShipmentOptionsOk returns a tuple with the ShipmentOptions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetShipmentOptionsOk() (*ShipmentOptions, bool) {
	if o == nil || IsNil(o.ShipmentOptions) {
		return nil, false
	}
	return o.ShipmentOptions, true
}

// HasShipmentOptions returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasShipmentOptions() bool {
	if o != nil && !IsNil(o.ShipmentOptions) {
		return true
	}

	return false
}

// SetShipmentOptions gets a reference to the given ShipmentOptions and assigns it to the ShipmentOptions field.
func (o *GetShipmentsForBatchDataInner) SetShipmentOptions(v ShipmentOptions) {
	o.ShipmentOptions = &v
}

// GetSpecialServices returns the SpecialServices field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetSpecialServices() []GetShipmentsForBatchDataInnerSpecialServicesInner {
	if o == nil || IsNil(o.SpecialServices) {
		var ret []GetShipmentsForBatchDataInnerSpecialServicesInner
		return ret
	}
	return o.SpecialServices
}

// GetSpecialServicesOk returns a tuple with the SpecialServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetSpecialServicesOk() ([]GetShipmentsForBatchDataInnerSpecialServicesInner, bool) {
	if o == nil || IsNil(o.SpecialServices) {
		return nil, false
	}
	return o.SpecialServices, true
}

// HasSpecialServices returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasSpecialServices() bool {
	if o != nil && !IsNil(o.SpecialServices) {
		return true
	}

	return false
}

// SetSpecialServices gets a reference to the given []GetShipmentsForBatchDataInnerSpecialServicesInner and assigns it to the SpecialServices field.
func (o *GetShipmentsForBatchDataInner) SetSpecialServices(v []GetShipmentsForBatchDataInnerSpecialServicesInner) {
	o.SpecialServices = v
}

// GetStepStatus returns the StepStatus field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetStepStatus() GetShipmentsForBatchDataInnerStepStatus {
	if o == nil || IsNil(o.StepStatus) {
		var ret GetShipmentsForBatchDataInnerStepStatus
		return ret
	}
	return *o.StepStatus
}

// GetStepStatusOk returns a tuple with the StepStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetStepStatusOk() (*GetShipmentsForBatchDataInnerStepStatus, bool) {
	if o == nil || IsNil(o.StepStatus) {
		return nil, false
	}
	return o.StepStatus, true
}

// HasStepStatus returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasStepStatus() bool {
	if o != nil && !IsNil(o.StepStatus) {
		return true
	}

	return false
}

// SetStepStatus gets a reference to the given GetShipmentsForBatchDataInnerStepStatus and assigns it to the StepStatus field.
func (o *GetShipmentsForBatchDataInner) SetStepStatus(v GetShipmentsForBatchDataInnerStepStatus) {
	o.StepStatus = &v
}

// GetToAddress returns the ToAddress field value if set, zero value otherwise.
func (o *GetShipmentsForBatchDataInner) GetToAddress() ToAddress {
	if o == nil || IsNil(o.ToAddress) {
		var ret ToAddress
		return ret
	}
	return *o.ToAddress
}

// GetToAddressOk returns a tuple with the ToAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetShipmentsForBatchDataInner) GetToAddressOk() (*ToAddress, bool) {
	if o == nil || IsNil(o.ToAddress) {
		return nil, false
	}
	return o.ToAddress, true
}

// HasToAddress returns a boolean if a field has been set.
func (o *GetShipmentsForBatchDataInner) HasToAddress() bool {
	if o != nil && !IsNil(o.ToAddress) {
		return true
	}

	return false
}

// SetToAddress gets a reference to the given ToAddress and assigns it to the ToAddress field.
func (o *GetShipmentsForBatchDataInner) SetToAddress(v ToAddress) {
	o.ToAddress = &v
}

func (o GetShipmentsForBatchDataInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetShipmentsForBatchDataInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BatchId) {
		toSerialize["batchId"] = o.BatchId
	}
	if !IsNil(o.CarrierAccountId) {
		toSerialize["carrierAccountId"] = o.CarrierAccountId
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	if !IsNil(o.FromAddress) {
		toSerialize["fromAddress"] = o.FromAddress
	}
	if !IsNil(o.LabelLayout) {
		toSerialize["labelLayout"] = o.LabelLayout
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if !IsNil(o.Parcel) {
		toSerialize["parcel"] = o.Parcel
	}
	if !IsNil(o.ParcelType) {
		toSerialize["parcelType"] = o.ParcelType
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.ShipmentId) {
		toSerialize["shipmentId"] = o.ShipmentId
	}
	if !IsNil(o.ShipmentIdentifier) {
		toSerialize["shipmentIdentifier"] = o.ShipmentIdentifier
	}
	if !IsNil(o.ShipmentOptions) {
		toSerialize["shipmentOptions"] = o.ShipmentOptions
	}
	if !IsNil(o.SpecialServices) {
		toSerialize["specialServices"] = o.SpecialServices
	}
	if !IsNil(o.StepStatus) {
		toSerialize["stepStatus"] = o.StepStatus
	}
	if !IsNil(o.ToAddress) {
		toSerialize["toAddress"] = o.ToAddress
	}
	return toSerialize, nil
}

type NullableGetShipmentsForBatchDataInner struct {
	value *GetShipmentsForBatchDataInner
	isSet bool
}

func (v NullableGetShipmentsForBatchDataInner) Get() *GetShipmentsForBatchDataInner {
	return v.value
}

func (v *NullableGetShipmentsForBatchDataInner) Set(val *GetShipmentsForBatchDataInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetShipmentsForBatchDataInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetShipmentsForBatchDataInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetShipmentsForBatchDataInner(val *GetShipmentsForBatchDataInner) *NullableGetShipmentsForBatchDataInner {
	return &NullableGetShipmentsForBatchDataInner{value: val, isSet: true}
}

func (v NullableGetShipmentsForBatchDataInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetShipmentsForBatchDataInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


